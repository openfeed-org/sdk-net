// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: openfeed_api.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Org.Openfeed {

  /// <summary>Holder for reflection information generated from openfeed_api.proto</summary>
  public static partial class OpenfeedApiReflection {

    #region Descriptor
    /// <summary>File descriptor for openfeed_api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OpenfeedApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJvcGVuZmVlZF9hcGkucHJvdG8SDG9yZy5vcGVuZmVlZBoZb3BlbmZlZWRf",
            "aW5zdHJ1bWVudC5wcm90bxoOb3BlbmZlZWQucHJvdG8i4AMKFk9wZW5mZWVk",
            "R2F0ZXdheVJlcXVlc3QSMgoMbG9naW5SZXF1ZXN0GAEgASgLMhoub3JnLm9w",
            "ZW5mZWVkLkxvZ2luUmVxdWVzdEgAEjQKDWxvZ291dFJlcXVlc3QYAiABKAsy",
            "Gy5vcmcub3BlbmZlZWQuTG9nb3V0UmVxdWVzdEgAEkAKE3N1YnNjcmlwdGlv",
            "blJlcXVlc3QYAyABKAsyIS5vcmcub3BlbmZlZWQuU3Vic2NyaXB0aW9uUmVx",
            "dWVzdEgAEjwKEWluc3RydW1lbnRSZXF1ZXN0GAQgASgLMh8ub3JnLm9wZW5m",
            "ZWVkLkluc3RydW1lbnRSZXF1ZXN0SAASTgoaaW5zdHJ1bWVudFJlZmVyZW5j",
            "ZVJlcXVlc3QYBSABKAsyKC5vcmcub3BlbmZlZWQuSW5zdHJ1bWVudFJlZmVy",
            "ZW5jZVJlcXVlc3RIABI4Cg9leGNoYW5nZVJlcXVlc3QYBiABKAsyHS5vcmcu",
            "b3BlbmZlZWQuRXhjaGFuZ2VSZXF1ZXN0SAASSgoYbGlzdFN1YnNjcmlwdGlv",
            "bnNSZXF1ZXN0GAcgASgLMiYub3JnLm9wZW5mZWVkLkxpc3RTdWJzY3JpcHRp",
            "b25zUmVxdWVzdEgAQgYKBGRhdGEilgcKFk9wZW5mZWVkR2F0ZXdheU1lc3Nh",
            "Z2USNAoNbG9naW5SZXNwb25zZRgBIAEoCzIbLm9yZy5vcGVuZmVlZC5Mb2dp",
            "blJlc3BvbnNlSAASNgoObG9nb3V0UmVzcG9uc2UYAiABKAsyHC5vcmcub3Bl",
            "bmZlZWQuTG9nb3V0UmVzcG9uc2VIABI+ChJpbnN0cnVtZW50UmVzcG9uc2UY",
            "AyABKAsyIC5vcmcub3BlbmZlZWQuSW5zdHJ1bWVudFJlc3BvbnNlSAASUAob",
            "aW5zdHJ1bWVudFJlZmVyZW5jZVJlc3BvbnNlGAQgASgLMikub3JnLm9wZW5m",
            "ZWVkLkluc3RydW1lbnRSZWZlcmVuY2VSZXNwb25zZUgAEkIKFHN1YnNjcmlw",
            "dGlvblJlc3BvbnNlGAUgASgLMiIub3JnLm9wZW5mZWVkLlN1YnNjcmlwdGlv",
            "blJlc3BvbnNlSAASMgoMbWFya2V0U3RhdHVzGAYgASgLMhoub3JnLm9wZW5m",
            "ZWVkLk1hcmtldFN0YXR1c0gAEiwKCWhlYXJ0QmVhdBgHIAEoCzIXLm9yZy5v",
            "cGVuZmVlZC5IZWFydEJlYXRIABJCChRpbnN0cnVtZW50RGVmaW5pdGlvbhgI",
            "IAEoCzIiLm9yZy5vcGVuZmVlZC5JbnN0cnVtZW50RGVmaW5pdGlvbkgAEjYK",
            "Dm1hcmtldFNuYXBzaG90GAkgASgLMhwub3JnLm9wZW5mZWVkLk1hcmtldFNu",
            "YXBzaG90SAASMgoMbWFya2V0VXBkYXRlGAogASgLMhoub3JnLm9wZW5mZWVk",
            "Lk1hcmtldFVwZGF0ZUgAEjQKDXZvbHVtZUF0UHJpY2UYCyABKAsyGy5vcmcu",
            "b3BlbmZlZWQuVm9sdW1lQXRQcmljZUgAEiIKBG9obGMYDCABKAsyEi5vcmcu",
            "b3BlbmZlZWQuT2hsY0gAEjoKEGV4Y2hhbmdlUmVzcG9uc2UYDSABKAsyHi5v",
            "cmcub3BlbmZlZWQuRXhjaGFuZ2VSZXNwb25zZUgAEjoKEGluc3RydW1lbnRB",
            "Y3Rpb24YDiABKAsyHi5vcmcub3BlbmZlZWQuSW5zdHJ1bWVudEFjdGlvbkgA",
            "EkwKGWxpc3RTdWJzY3JpcHRpb25zUmVzcG9uc2UYDyABKAsyJy5vcmcub3Bl",
            "bmZlZWQuTGlzdFN1YnNjcmlwdGlvbnNSZXNwb25zZUgAQgYKBGRhdGEiZwoG",
            "U3RhdHVzEiQKBnJlc3VsdBgBIAEoDjIULm9yZy5vcGVuZmVlZC5SZXN1bHQS",
            "DwoHbWVzc2FnZRgCIAEoCRImCgdzZXJ2aWNlGAMgASgOMhUub3JnLm9wZW5m",
            "ZWVkLlNlcnZpY2UihgEKDExvZ2luUmVxdWVzdBIVCg1jb3JyZWxhdGlvbklk",
            "GAEgASgSEhAKCHVzZXJuYW1lGAIgASgJEhAKCHBhc3N3b3JkGAMgASgJEhUK",
            "DWNsaWVudFZlcnNpb24YBCABKAkSFwoPcHJvdG9jb2xWZXJzaW9uGAUgASgR",
            "EgsKA2p3dBgGIAEoCSJbCg1Mb2dpblJlc3BvbnNlEhUKDWNvcnJlbGF0aW9u",
            "SWQYASABKBISJAoGc3RhdHVzGAIgASgLMhQub3JnLm9wZW5mZWVkLlN0YXR1",
            "cxINCgV0b2tlbhgDIAEoCSI1Cg1Mb2dvdXRSZXF1ZXN0EhUKDWNvcnJlbGF0",
            "aW9uSWQYASABKBISDQoFdG9rZW4YAyABKAkiTQoOTG9nb3V0UmVzcG9uc2US",
            "FQoNY29ycmVsYXRpb25JZBgBIAEoEhIkCgZzdGF0dXMYAiABKAsyFC5vcmcu",
            "b3BlbmZlZWQuU3RhdHVzIoMCChFJbnN0cnVtZW50UmVxdWVzdBIVCg1jb3Jy",
            "ZWxhdGlvbklkGAEgASgSEg0KBXRva2VuGAIgASgJEkkKDmluc3RydW1lbnRU",
            "eXBlGAMgAygOMjEub3JnLm9wZW5mZWVkLkluc3RydW1lbnREZWZpbml0aW9u",
            "Lkluc3RydW1lbnRUeXBlEhIKCnNwcmVhZFR5cGUYBCADKAkSDwoHdmVyc2lv",
            "bhgFIAEoERIQCgZzeW1ib2wYCiABKAlIABISCghtYXJrZXRJZBgLIAEoEkgA",
            "EhIKCGV4Y2hhbmdlGAwgASgJSAASEwoJY2hhbm5lbElkGA0gASgRSABCCQoH",
            "cmVxdWVzdCKLAgoSSW5zdHJ1bWVudFJlc3BvbnNlEhUKDWNvcnJlbGF0aW9u",
            "SWQYASABKBISJAoGc3RhdHVzGAIgASgLMhQub3JnLm9wZW5mZWVkLlN0YXR1",
            "cxIbChNudW1iZXJPZkRlZmluaXRpb25zGAMgASgREg4KBnN5bWJvbBgEIAEo",
            "CRIQCghtYXJrZXRJZBgFIAEoEhIQCghleGNoYW5nZRgGIAEoCRIRCgljaGFu",
            "bmVsSWQYByABKBESEgoKZXhjaGFuZ2VJZBgIIAEoERJAChRpbnN0cnVtZW50",
            "RGVmaW5pdGlvbhgPIAEoCzIiLm9yZy5vcGVuZmVlZC5JbnN0cnVtZW50RGVm",
            "aW5pdGlvbiKcAQoaSW5zdHJ1bWVudFJlZmVyZW5jZVJlcXVlc3QSFQoNY29y",
            "cmVsYXRpb25JZBgBIAEoEhINCgV0b2tlbhgCIAEoCRIQCgZzeW1ib2wYCiAB",
            "KAlIABISCghtYXJrZXRJZBgLIAEoEkgAEhIKCGV4Y2hhbmdlGAwgASgJSAAS",
            "EwoJY2hhbm5lbElkGA0gASgRSABCCQoHcmVxdWVzdCKnAgobSW5zdHJ1bWVu",
            "dFJlZmVyZW5jZVJlc3BvbnNlEhUKDWNvcnJlbGF0aW9uSWQYASABKBISJAoG",
            "c3RhdHVzGAIgASgLMhQub3JnLm9wZW5mZWVkLlN0YXR1cxIbChNudW1iZXJP",
            "ZkRlZmluaXRpb25zGAMgASgREhEKCWNoYW5uZWxJZBgEIAEoERIQCghtYXJr",
            "ZXRJZBgFIAEoEhIOCgZzeW1ib2wYBiABKAkSEAoIZXhjaGFuZ2UYByABKAkS",
            "EQoJZGRmU3ltYm9sGAggASgJEhMKC2RkZkV4Y2hhbmdlGAkgASgJEhMKC2Rk",
            "ZkJhc2VDb2RlGAogASgJEhYKDmV4Y2hhbmdlU3ltYm9sGAsgASgJEhIKCmV4",
            "Y2hhbmdlSWQYDCABKBEiNwoPRXhjaGFuZ2VSZXF1ZXN0EhUKDWNvcnJlbGF0",
            "aW9uSWQYASABKBISDQoFdG9rZW4YAiABKAki3wEKEEV4Y2hhbmdlUmVzcG9u",
            "c2USFQoNY29ycmVsYXRpb25JZBgBIAEoEhIkCgZzdGF0dXMYAiABKAsyFC5v",
            "cmcub3BlbmZlZWQuU3RhdHVzEjoKCWV4Y2hhbmdlcxgDIAMoCzInLm9yZy5v",
            "cGVuZmVlZC5FeGNoYW5nZVJlc3BvbnNlLkV4Y2hhbmdlGlIKCEV4Y2hhbmdl",
            "EgwKBGNvZGUYASABKAkSEwoLZGVzY3JpcHRpb24YAiABKAkSDwoHYWxpYXNl",
            "cxgDIAMoCRISCgpleGNoYW5nZUlkGAQgASgRIl0KFkJ1bGtTdWJzY3JpcHRp",
            "b25GaWx0ZXISLAoKc3ltYm9sVHlwZRgBIAEoDjIYLm9yZy5vcGVuZmVlZC5T",
            "eW1ib2xUeXBlEhUKDXN5bWJvbFBhdHRlcm4YAiABKAki8AQKE1N1YnNjcmlw",
            "dGlvblJlcXVlc3QSFQoNY29ycmVsYXRpb25JZBgBIAEoEhINCgV0b2tlbhgC",
            "IAEoCRImCgdzZXJ2aWNlGAMgASgOMhUub3JnLm9wZW5mZWVkLlNlcnZpY2US",
            "EwoLdW5zdWJzY3JpYmUYBCABKAgSOwoIcmVxdWVzdHMYBSADKAsyKS5vcmcu",
            "b3BlbmZlZWQuU3Vic2NyaXB0aW9uUmVxdWVzdC5SZXF1ZXN0GrgDCgdSZXF1",
            "ZXN0EhAKBnN5bWJvbBgBIAEoCUgAEhIKCG1hcmtldElkGAIgASgSSAASEgoI",
            "ZXhjaGFuZ2UYAyABKAlIABITCgljaGFubmVsSWQYBCABKBFIABI4ChBzdWJz",
            "Y3JpcHRpb25UeXBlGAogAygOMh4ub3JnLm9wZW5mZWVkLlN1YnNjcmlwdGlv",
            "blR5cGUSHwoXc25hcHNob3RJbnRlcnZhbFNlY29uZHMYCyABKBESSQoOaW5z",
            "dHJ1bWVudFR5cGUYDCADKA4yMS5vcmcub3BlbmZlZWQuSW5zdHJ1bWVudERl",
            "ZmluaXRpb24uSW5zdHJ1bWVudFR5cGUSRAoWYnVsa1N1YnNjcmlwdGlvbkZp",
            "bHRlchgNIAMoCzIkLm9yZy5vcGVuZmVlZC5CdWxrU3Vic2NyaXB0aW9uRmls",
            "dGVyEhgKEHNwcmVhZFR5cGVGaWx0ZXIYDiADKAkSKAogc3Vic2NyaXB0aW9u",
            "RG9Ob3RTZW5kSW5zdHJ1bWVudHMYDyABKAgSJgoec3Vic2NyaXB0aW9uRG9O",
            "b3RTZW5kU25hcHNob3RzGBAgASgIQgYKBGRhdGEipwIKFFN1YnNjcmlwdGlv",
            "blJlc3BvbnNlEhUKDWNvcnJlbGF0aW9uSWQYASABKBISJAoGc3RhdHVzGAIg",
            "ASgLMhQub3JnLm9wZW5mZWVkLlN0YXR1cxIOCgZzeW1ib2wYAyABKAkSEAoI",
            "bWFya2V0SWQYBCABKBISEAoIZXhjaGFuZ2UYBSABKAkSEQoJY2hhbm5lbElk",
            "GAYgASgREhsKE251bWJlck9mRGVmaW5pdGlvbnMYByABKBESOAoQc3Vic2Ny",
            "aXB0aW9uVHlwZRgIIAEoDjIeLm9yZy5vcGVuZmVlZC5TdWJzY3JpcHRpb25U",
            "eXBlEhMKC3Vuc3Vic2NyaWJlGAkgASgIEh8KF3NuYXBzaG90SW50ZXJ2YWxT",
            "ZWNvbmRzGAogASgRIlIKGExpc3RTdWJzY3JpcHRpb25zUmVxdWVzdBIVCg1j",
            "b3JyZWxhdGlvbklkGAEgASgSEg0KBXRva2VuGAIgASgJEhAKCHVzZXJuYW1l",
            "GAMgASgJIoAFChlMaXN0U3Vic2NyaXB0aW9uc1Jlc3BvbnNlEhUKDWNvcnJl",
            "bGF0aW9uSWQYASABKBISJAoGc3RhdHVzGAIgASgLMhQub3JnLm9wZW5mZWVk",
            "LlN0YXR1cxIQCgh1c2VybmFtZRgDIAEoCRJBCghzZXNzaW9ucxgKIAMoCzIv",
            "Lm9yZy5vcGVuZmVlZC5MaXN0U3Vic2NyaXB0aW9uc1Jlc3BvbnNlLlNlc3Np",
            "b24a6gEKB1Nlc3Npb24SEQoJbG9naW5UaW1lGAEgASgSEg0KBXRva2VuGAIg",
            "ASgJEhUKDWNsaWVudFZlcnNpb24YAyABKAkSUQoTbWFya2V0U3Vic2NyaXB0",
            "aW9ucxgKIAMoCzI0Lm9yZy5vcGVuZmVlZC5MaXN0U3Vic2NyaXB0aW9uc1Jl",
            "c3BvbnNlLlN1YnNjcmlwdGlvbhJTChVleGNoYW5nZVN1YnNjcmlwdGlvbnMY",
            "CyADKAsyNC5vcmcub3BlbmZlZWQuTGlzdFN1YnNjcmlwdGlvbnNSZXNwb25z",
            "ZS5TdWJzY3JpcHRpb24atQEKDFN1YnNjcmlwdGlvbhIWCg5zdWJzY3JpcHRp",
            "b25JZBgBIAEoCRIQCghzeW1ib2xJZBgCIAEoCRIQCghtYXJrZXRJZBgDIAEo",
            "EhJJCgxzeW1ib2xDb3VudHMYBCADKAsyMy5vcmcub3BlbmZlZWQuTGlzdFN1",
            "YnNjcmlwdGlvbnNSZXNwb25zZS5TeW1ib2xDb3VudBIQCghleGNoYW5nZRgK",
            "IAEoCRIMCgRyb290GAsgASgJGiwKC1N5bWJvbENvdW50Eg4KBnN5bWJvbBgB",
            "IAEoCRINCgVjb3VudBgCIAEoESqyAwoGUmVzdWx0EhIKDlVOS05PV05fUkVT",
            "VUxUEAASCwoHU1VDQ0VTUxABEhkKFUlOU1RSVU1FTlRTX05PVF9GT1VORBBw",
            "Eg8KC0pXVF9FWFBJUkVEEHESDwoLSldUX0lOVkFMSUQQchITCg9EVVBMSUNB",
            "VEVfTE9HSU4QcxISCg5JTlZBTElEX1NZTUJPTBB0EhUKEUlOVkFMSURfTUFS",
            "S0VUX0lEEHUSFAoQSU5WQUxJRF9FWENIQU5HRRB2EhYKEklOVkFMSURfQ0hB",
            "Tk5FTF9JRBB3EhUKEU1BTEZPUk1FRF9NRVNTQUdFEHgSFgoSVU5FWFBFQ1RF",
            "RF9NRVNTQUdFEHkSEgoOTk9UX1NVQlNDUklCRUQQehIaChZEVVBMSUNBVEVf",
            "U1VCU0NSSVBUSU9OEHsSFwoTSU5WQUxJRF9DUkVERU5USUFMUxB8EhsKF0lO",
            "U1VGRklDSUVOVF9QUklWSUxFR0VTEH0SGwoXQVVUSEVOVElDQVRJT05fUkVR",
            "VUlSRUQQfhITCg9HRU5FUklDX0ZBSUxVUkUQfxIVChBJTlZBTElEX1VTRVJO",
            "QU1FEIABKrIBChBTdWJzY3JpcHRpb25UeXBlEgcKA0FMTBAAEgkKBVFVT1RF",
            "EAESFQoRUVVPVEVfUEFSVElDSVBBTlQQAhIPCgtERVBUSF9QUklDRRADEg8K",
            "C0RFUFRIX09SREVSEAQSCgoGVFJBREVTEAUSFQoRQ1VNVUxBVElWRV9WT0xV",
            "TUUQBhIICgRPSExDEAcSFAoQT0hMQ19OT05fUkVHVUxBUhAIEg4KClNFVFRM",
            "RU1FTlQQCSooCgpTeW1ib2xUeXBlEgwKCEJBUkNIQVJUEAASDAoIRVhDSEFO",
            "R0UQAUIHSAFQAaABAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Org.Openfeed.OpenfeedInstrumentReflection.Descriptor, global::Org.Openfeed.OpenfeedReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Org.Openfeed.Result), typeof(global::Org.Openfeed.SubscriptionType), typeof(global::Org.Openfeed.SymbolType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.OpenfeedGatewayRequest), global::Org.Openfeed.OpenfeedGatewayRequest.Parser, new[]{ "LoginRequest", "LogoutRequest", "SubscriptionRequest", "InstrumentRequest", "InstrumentReferenceRequest", "ExchangeRequest", "ListSubscriptionsRequest" }, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.OpenfeedGatewayMessage), global::Org.Openfeed.OpenfeedGatewayMessage.Parser, new[]{ "LoginResponse", "LogoutResponse", "InstrumentResponse", "InstrumentReferenceResponse", "SubscriptionResponse", "MarketStatus", "HeartBeat", "InstrumentDefinition", "MarketSnapshot", "MarketUpdate", "VolumeAtPrice", "Ohlc", "ExchangeResponse", "InstrumentAction", "ListSubscriptionsResponse" }, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.Status), global::Org.Openfeed.Status.Parser, new[]{ "Result", "Message", "Service" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.LoginRequest), global::Org.Openfeed.LoginRequest.Parser, new[]{ "CorrelationId", "Username", "Password", "ClientVersion", "ProtocolVersion", "Jwt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.LoginResponse), global::Org.Openfeed.LoginResponse.Parser, new[]{ "CorrelationId", "Status", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.LogoutRequest), global::Org.Openfeed.LogoutRequest.Parser, new[]{ "CorrelationId", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.LogoutResponse), global::Org.Openfeed.LogoutResponse.Parser, new[]{ "CorrelationId", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.InstrumentRequest), global::Org.Openfeed.InstrumentRequest.Parser, new[]{ "CorrelationId", "Token", "InstrumentType", "SpreadType", "Version", "Symbol", "MarketId", "Exchange", "ChannelId" }, new[]{ "Request" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.InstrumentResponse), global::Org.Openfeed.InstrumentResponse.Parser, new[]{ "CorrelationId", "Status", "NumberOfDefinitions", "Symbol", "MarketId", "Exchange", "ChannelId", "ExchangeId", "InstrumentDefinition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.InstrumentReferenceRequest), global::Org.Openfeed.InstrumentReferenceRequest.Parser, new[]{ "CorrelationId", "Token", "Symbol", "MarketId", "Exchange", "ChannelId" }, new[]{ "Request" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.InstrumentReferenceResponse), global::Org.Openfeed.InstrumentReferenceResponse.Parser, new[]{ "CorrelationId", "Status", "NumberOfDefinitions", "ChannelId", "MarketId", "Symbol", "Exchange", "DdfSymbol", "DdfExchange", "DdfBaseCode", "ExchangeSymbol", "ExchangeId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.ExchangeRequest), global::Org.Openfeed.ExchangeRequest.Parser, new[]{ "CorrelationId", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.ExchangeResponse), global::Org.Openfeed.ExchangeResponse.Parser, new[]{ "CorrelationId", "Status", "Exchanges" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.ExchangeResponse.Types.Exchange), global::Org.Openfeed.ExchangeResponse.Types.Exchange.Parser, new[]{ "Code", "Description", "Aliases", "ExchangeId" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.BulkSubscriptionFilter), global::Org.Openfeed.BulkSubscriptionFilter.Parser, new[]{ "SymbolType", "SymbolPattern" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.SubscriptionRequest), global::Org.Openfeed.SubscriptionRequest.Parser, new[]{ "CorrelationId", "Token", "Service", "Unsubscribe", "Requests" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.SubscriptionRequest.Types.Request), global::Org.Openfeed.SubscriptionRequest.Types.Request.Parser, new[]{ "Symbol", "MarketId", "Exchange", "ChannelId", "SubscriptionType", "SnapshotIntervalSeconds", "InstrumentType", "BulkSubscriptionFilter", "SpreadTypeFilter", "SubscriptionDoNotSendInstruments", "SubscriptionDoNotSendSnapshots" }, new[]{ "Data" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.SubscriptionResponse), global::Org.Openfeed.SubscriptionResponse.Parser, new[]{ "CorrelationId", "Status", "Symbol", "MarketId", "Exchange", "ChannelId", "NumberOfDefinitions", "SubscriptionType", "Unsubscribe", "SnapshotIntervalSeconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.ListSubscriptionsRequest), global::Org.Openfeed.ListSubscriptionsRequest.Parser, new[]{ "CorrelationId", "Token", "Username" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.ListSubscriptionsResponse), global::Org.Openfeed.ListSubscriptionsResponse.Parser, new[]{ "CorrelationId", "Status", "Username", "Sessions" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.ListSubscriptionsResponse.Types.Session), global::Org.Openfeed.ListSubscriptionsResponse.Types.Session.Parser, new[]{ "LoginTime", "Token", "ClientVersion", "MarketSubscriptions", "ExchangeSubscriptions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.ListSubscriptionsResponse.Types.Subscription), global::Org.Openfeed.ListSubscriptionsResponse.Types.Subscription.Parser, new[]{ "SubscriptionId", "SymbolId", "MarketId", "SymbolCounts", "Exchange", "Root" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Openfeed.ListSubscriptionsResponse.Types.SymbolCount), global::Org.Openfeed.ListSubscriptionsResponse.Types.SymbolCount.Parser, new[]{ "Symbol", "Count" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  public enum Result {
    [pbr::OriginalName("UNKNOWN_RESULT")] UnknownResult = 0,
    [pbr::OriginalName("SUCCESS")] Success = 1,
    [pbr::OriginalName("INSTRUMENTS_NOT_FOUND")] InstrumentsNotFound = 112,
    [pbr::OriginalName("JWT_EXPIRED")] JwtExpired = 113,
    [pbr::OriginalName("JWT_INVALID")] JwtInvalid = 114,
    [pbr::OriginalName("DUPLICATE_LOGIN")] DuplicateLogin = 115,
    [pbr::OriginalName("INVALID_SYMBOL")] InvalidSymbol = 116,
    [pbr::OriginalName("INVALID_MARKET_ID")] InvalidMarketId = 117,
    [pbr::OriginalName("INVALID_EXCHANGE")] InvalidExchange = 118,
    [pbr::OriginalName("INVALID_CHANNEL_ID")] InvalidChannelId = 119,
    [pbr::OriginalName("MALFORMED_MESSAGE")] MalformedMessage = 120,
    [pbr::OriginalName("UNEXPECTED_MESSAGE")] UnexpectedMessage = 121,
    [pbr::OriginalName("NOT_SUBSCRIBED")] NotSubscribed = 122,
    [pbr::OriginalName("DUPLICATE_SUBSCRIPTION")] DuplicateSubscription = 123,
    [pbr::OriginalName("INVALID_CREDENTIALS")] InvalidCredentials = 124,
    [pbr::OriginalName("INSUFFICIENT_PRIVILEGES")] InsufficientPrivileges = 125,
    [pbr::OriginalName("AUTHENTICATION_REQUIRED")] AuthenticationRequired = 126,
    [pbr::OriginalName("GENERIC_FAILURE")] GenericFailure = 127,
    [pbr::OriginalName("INVALID_USERNAME")] InvalidUsername = 128,
  }

  public enum SubscriptionType {
    [pbr::OriginalName("ALL")] All = 0,
    [pbr::OriginalName("QUOTE")] Quote = 1,
    [pbr::OriginalName("QUOTE_PARTICIPANT")] QuoteParticipant = 2,
    [pbr::OriginalName("DEPTH_PRICE")] DepthPrice = 3,
    [pbr::OriginalName("DEPTH_ORDER")] DepthOrder = 4,
    [pbr::OriginalName("TRADES")] Trades = 5,
    [pbr::OriginalName("CUMULATIVE_VOLUME")] CumulativeVolume = 6,
    [pbr::OriginalName("OHLC")] Ohlc = 7,
    [pbr::OriginalName("OHLC_NON_REGULAR")] OhlcNonRegular = 8,
    [pbr::OriginalName("SETTLEMENT")] Settlement = 9,
  }

  /// <summary>
  ///&#x2F; Symbol type for the subscription filter.
  /// </summary>
  public enum SymbolType {
    [pbr::OriginalName("BARCHART")] Barchart = 0,
    [pbr::OriginalName("EXCHANGE")] Exchange = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  ///&#x2F; Openfeed Server request
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class OpenfeedGatewayRequest : pb::IMessage<OpenfeedGatewayRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OpenfeedGatewayRequest> _parser = new pb::MessageParser<OpenfeedGatewayRequest>(() => new OpenfeedGatewayRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OpenfeedGatewayRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Openfeed.OpenfeedApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OpenfeedGatewayRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OpenfeedGatewayRequest(OpenfeedGatewayRequest other) : this() {
      switch (other.DataCase) {
        case DataOneofCase.LoginRequest:
          LoginRequest = other.LoginRequest.Clone();
          break;
        case DataOneofCase.LogoutRequest:
          LogoutRequest = other.LogoutRequest.Clone();
          break;
        case DataOneofCase.SubscriptionRequest:
          SubscriptionRequest = other.SubscriptionRequest.Clone();
          break;
        case DataOneofCase.InstrumentRequest:
          InstrumentRequest = other.InstrumentRequest.Clone();
          break;
        case DataOneofCase.InstrumentReferenceRequest:
          InstrumentReferenceRequest = other.InstrumentReferenceRequest.Clone();
          break;
        case DataOneofCase.ExchangeRequest:
          ExchangeRequest = other.ExchangeRequest.Clone();
          break;
        case DataOneofCase.ListSubscriptionsRequest:
          ListSubscriptionsRequest = other.ListSubscriptionsRequest.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OpenfeedGatewayRequest Clone() {
      return new OpenfeedGatewayRequest(this);
    }

    /// <summary>Field number for the "loginRequest" field.</summary>
    public const int LoginRequestFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.LoginRequest LoginRequest {
      get { return dataCase_ == DataOneofCase.LoginRequest ? (global::Org.Openfeed.LoginRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.LoginRequest;
      }
    }

    /// <summary>Field number for the "logoutRequest" field.</summary>
    public const int LogoutRequestFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.LogoutRequest LogoutRequest {
      get { return dataCase_ == DataOneofCase.LogoutRequest ? (global::Org.Openfeed.LogoutRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.LogoutRequest;
      }
    }

    /// <summary>Field number for the "subscriptionRequest" field.</summary>
    public const int SubscriptionRequestFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.SubscriptionRequest SubscriptionRequest {
      get { return dataCase_ == DataOneofCase.SubscriptionRequest ? (global::Org.Openfeed.SubscriptionRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.SubscriptionRequest;
      }
    }

    /// <summary>Field number for the "instrumentRequest" field.</summary>
    public const int InstrumentRequestFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.InstrumentRequest InstrumentRequest {
      get { return dataCase_ == DataOneofCase.InstrumentRequest ? (global::Org.Openfeed.InstrumentRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.InstrumentRequest;
      }
    }

    /// <summary>Field number for the "instrumentReferenceRequest" field.</summary>
    public const int InstrumentReferenceRequestFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.InstrumentReferenceRequest InstrumentReferenceRequest {
      get { return dataCase_ == DataOneofCase.InstrumentReferenceRequest ? (global::Org.Openfeed.InstrumentReferenceRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.InstrumentReferenceRequest;
      }
    }

    /// <summary>Field number for the "exchangeRequest" field.</summary>
    public const int ExchangeRequestFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.ExchangeRequest ExchangeRequest {
      get { return dataCase_ == DataOneofCase.ExchangeRequest ? (global::Org.Openfeed.ExchangeRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.ExchangeRequest;
      }
    }

    /// <summary>Field number for the "listSubscriptionsRequest" field.</summary>
    public const int ListSubscriptionsRequestFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.ListSubscriptionsRequest ListSubscriptionsRequest {
      get { return dataCase_ == DataOneofCase.ListSubscriptionsRequest ? (global::Org.Openfeed.ListSubscriptionsRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.ListSubscriptionsRequest;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      LoginRequest = 1,
      LogoutRequest = 2,
      SubscriptionRequest = 3,
      InstrumentRequest = 4,
      InstrumentReferenceRequest = 5,
      ExchangeRequest = 6,
      ListSubscriptionsRequest = 7,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OpenfeedGatewayRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OpenfeedGatewayRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LoginRequest, other.LoginRequest)) return false;
      if (!object.Equals(LogoutRequest, other.LogoutRequest)) return false;
      if (!object.Equals(SubscriptionRequest, other.SubscriptionRequest)) return false;
      if (!object.Equals(InstrumentRequest, other.InstrumentRequest)) return false;
      if (!object.Equals(InstrumentReferenceRequest, other.InstrumentReferenceRequest)) return false;
      if (!object.Equals(ExchangeRequest, other.ExchangeRequest)) return false;
      if (!object.Equals(ListSubscriptionsRequest, other.ListSubscriptionsRequest)) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dataCase_ == DataOneofCase.LoginRequest) hash ^= LoginRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.LogoutRequest) hash ^= LogoutRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.SubscriptionRequest) hash ^= SubscriptionRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.InstrumentRequest) hash ^= InstrumentRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.InstrumentReferenceRequest) hash ^= InstrumentReferenceRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.ExchangeRequest) hash ^= ExchangeRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.ListSubscriptionsRequest) hash ^= ListSubscriptionsRequest.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dataCase_ == DataOneofCase.LoginRequest) {
        output.WriteRawTag(10);
        output.WriteMessage(LoginRequest);
      }
      if (dataCase_ == DataOneofCase.LogoutRequest) {
        output.WriteRawTag(18);
        output.WriteMessage(LogoutRequest);
      }
      if (dataCase_ == DataOneofCase.SubscriptionRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(SubscriptionRequest);
      }
      if (dataCase_ == DataOneofCase.InstrumentRequest) {
        output.WriteRawTag(34);
        output.WriteMessage(InstrumentRequest);
      }
      if (dataCase_ == DataOneofCase.InstrumentReferenceRequest) {
        output.WriteRawTag(42);
        output.WriteMessage(InstrumentReferenceRequest);
      }
      if (dataCase_ == DataOneofCase.ExchangeRequest) {
        output.WriteRawTag(50);
        output.WriteMessage(ExchangeRequest);
      }
      if (dataCase_ == DataOneofCase.ListSubscriptionsRequest) {
        output.WriteRawTag(58);
        output.WriteMessage(ListSubscriptionsRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dataCase_ == DataOneofCase.LoginRequest) {
        output.WriteRawTag(10);
        output.WriteMessage(LoginRequest);
      }
      if (dataCase_ == DataOneofCase.LogoutRequest) {
        output.WriteRawTag(18);
        output.WriteMessage(LogoutRequest);
      }
      if (dataCase_ == DataOneofCase.SubscriptionRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(SubscriptionRequest);
      }
      if (dataCase_ == DataOneofCase.InstrumentRequest) {
        output.WriteRawTag(34);
        output.WriteMessage(InstrumentRequest);
      }
      if (dataCase_ == DataOneofCase.InstrumentReferenceRequest) {
        output.WriteRawTag(42);
        output.WriteMessage(InstrumentReferenceRequest);
      }
      if (dataCase_ == DataOneofCase.ExchangeRequest) {
        output.WriteRawTag(50);
        output.WriteMessage(ExchangeRequest);
      }
      if (dataCase_ == DataOneofCase.ListSubscriptionsRequest) {
        output.WriteRawTag(58);
        output.WriteMessage(ListSubscriptionsRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dataCase_ == DataOneofCase.LoginRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginRequest);
      }
      if (dataCase_ == DataOneofCase.LogoutRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogoutRequest);
      }
      if (dataCase_ == DataOneofCase.SubscriptionRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscriptionRequest);
      }
      if (dataCase_ == DataOneofCase.InstrumentRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InstrumentRequest);
      }
      if (dataCase_ == DataOneofCase.InstrumentReferenceRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InstrumentReferenceRequest);
      }
      if (dataCase_ == DataOneofCase.ExchangeRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExchangeRequest);
      }
      if (dataCase_ == DataOneofCase.ListSubscriptionsRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ListSubscriptionsRequest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OpenfeedGatewayRequest other) {
      if (other == null) {
        return;
      }
      switch (other.DataCase) {
        case DataOneofCase.LoginRequest:
          if (LoginRequest == null) {
            LoginRequest = new global::Org.Openfeed.LoginRequest();
          }
          LoginRequest.MergeFrom(other.LoginRequest);
          break;
        case DataOneofCase.LogoutRequest:
          if (LogoutRequest == null) {
            LogoutRequest = new global::Org.Openfeed.LogoutRequest();
          }
          LogoutRequest.MergeFrom(other.LogoutRequest);
          break;
        case DataOneofCase.SubscriptionRequest:
          if (SubscriptionRequest == null) {
            SubscriptionRequest = new global::Org.Openfeed.SubscriptionRequest();
          }
          SubscriptionRequest.MergeFrom(other.SubscriptionRequest);
          break;
        case DataOneofCase.InstrumentRequest:
          if (InstrumentRequest == null) {
            InstrumentRequest = new global::Org.Openfeed.InstrumentRequest();
          }
          InstrumentRequest.MergeFrom(other.InstrumentRequest);
          break;
        case DataOneofCase.InstrumentReferenceRequest:
          if (InstrumentReferenceRequest == null) {
            InstrumentReferenceRequest = new global::Org.Openfeed.InstrumentReferenceRequest();
          }
          InstrumentReferenceRequest.MergeFrom(other.InstrumentReferenceRequest);
          break;
        case DataOneofCase.ExchangeRequest:
          if (ExchangeRequest == null) {
            ExchangeRequest = new global::Org.Openfeed.ExchangeRequest();
          }
          ExchangeRequest.MergeFrom(other.ExchangeRequest);
          break;
        case DataOneofCase.ListSubscriptionsRequest:
          if (ListSubscriptionsRequest == null) {
            ListSubscriptionsRequest = new global::Org.Openfeed.ListSubscriptionsRequest();
          }
          ListSubscriptionsRequest.MergeFrom(other.ListSubscriptionsRequest);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Org.Openfeed.LoginRequest subBuilder = new global::Org.Openfeed.LoginRequest();
            if (dataCase_ == DataOneofCase.LoginRequest) {
              subBuilder.MergeFrom(LoginRequest);
            }
            input.ReadMessage(subBuilder);
            LoginRequest = subBuilder;
            break;
          }
          case 18: {
            global::Org.Openfeed.LogoutRequest subBuilder = new global::Org.Openfeed.LogoutRequest();
            if (dataCase_ == DataOneofCase.LogoutRequest) {
              subBuilder.MergeFrom(LogoutRequest);
            }
            input.ReadMessage(subBuilder);
            LogoutRequest = subBuilder;
            break;
          }
          case 26: {
            global::Org.Openfeed.SubscriptionRequest subBuilder = new global::Org.Openfeed.SubscriptionRequest();
            if (dataCase_ == DataOneofCase.SubscriptionRequest) {
              subBuilder.MergeFrom(SubscriptionRequest);
            }
            input.ReadMessage(subBuilder);
            SubscriptionRequest = subBuilder;
            break;
          }
          case 34: {
            global::Org.Openfeed.InstrumentRequest subBuilder = new global::Org.Openfeed.InstrumentRequest();
            if (dataCase_ == DataOneofCase.InstrumentRequest) {
              subBuilder.MergeFrom(InstrumentRequest);
            }
            input.ReadMessage(subBuilder);
            InstrumentRequest = subBuilder;
            break;
          }
          case 42: {
            global::Org.Openfeed.InstrumentReferenceRequest subBuilder = new global::Org.Openfeed.InstrumentReferenceRequest();
            if (dataCase_ == DataOneofCase.InstrumentReferenceRequest) {
              subBuilder.MergeFrom(InstrumentReferenceRequest);
            }
            input.ReadMessage(subBuilder);
            InstrumentReferenceRequest = subBuilder;
            break;
          }
          case 50: {
            global::Org.Openfeed.ExchangeRequest subBuilder = new global::Org.Openfeed.ExchangeRequest();
            if (dataCase_ == DataOneofCase.ExchangeRequest) {
              subBuilder.MergeFrom(ExchangeRequest);
            }
            input.ReadMessage(subBuilder);
            ExchangeRequest = subBuilder;
            break;
          }
          case 58: {
            global::Org.Openfeed.ListSubscriptionsRequest subBuilder = new global::Org.Openfeed.ListSubscriptionsRequest();
            if (dataCase_ == DataOneofCase.ListSubscriptionsRequest) {
              subBuilder.MergeFrom(ListSubscriptionsRequest);
            }
            input.ReadMessage(subBuilder);
            ListSubscriptionsRequest = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Org.Openfeed.LoginRequest subBuilder = new global::Org.Openfeed.LoginRequest();
            if (dataCase_ == DataOneofCase.LoginRequest) {
              subBuilder.MergeFrom(LoginRequest);
            }
            input.ReadMessage(subBuilder);
            LoginRequest = subBuilder;
            break;
          }
          case 18: {
            global::Org.Openfeed.LogoutRequest subBuilder = new global::Org.Openfeed.LogoutRequest();
            if (dataCase_ == DataOneofCase.LogoutRequest) {
              subBuilder.MergeFrom(LogoutRequest);
            }
            input.ReadMessage(subBuilder);
            LogoutRequest = subBuilder;
            break;
          }
          case 26: {
            global::Org.Openfeed.SubscriptionRequest subBuilder = new global::Org.Openfeed.SubscriptionRequest();
            if (dataCase_ == DataOneofCase.SubscriptionRequest) {
              subBuilder.MergeFrom(SubscriptionRequest);
            }
            input.ReadMessage(subBuilder);
            SubscriptionRequest = subBuilder;
            break;
          }
          case 34: {
            global::Org.Openfeed.InstrumentRequest subBuilder = new global::Org.Openfeed.InstrumentRequest();
            if (dataCase_ == DataOneofCase.InstrumentRequest) {
              subBuilder.MergeFrom(InstrumentRequest);
            }
            input.ReadMessage(subBuilder);
            InstrumentRequest = subBuilder;
            break;
          }
          case 42: {
            global::Org.Openfeed.InstrumentReferenceRequest subBuilder = new global::Org.Openfeed.InstrumentReferenceRequest();
            if (dataCase_ == DataOneofCase.InstrumentReferenceRequest) {
              subBuilder.MergeFrom(InstrumentReferenceRequest);
            }
            input.ReadMessage(subBuilder);
            InstrumentReferenceRequest = subBuilder;
            break;
          }
          case 50: {
            global::Org.Openfeed.ExchangeRequest subBuilder = new global::Org.Openfeed.ExchangeRequest();
            if (dataCase_ == DataOneofCase.ExchangeRequest) {
              subBuilder.MergeFrom(ExchangeRequest);
            }
            input.ReadMessage(subBuilder);
            ExchangeRequest = subBuilder;
            break;
          }
          case 58: {
            global::Org.Openfeed.ListSubscriptionsRequest subBuilder = new global::Org.Openfeed.ListSubscriptionsRequest();
            if (dataCase_ == DataOneofCase.ListSubscriptionsRequest) {
              subBuilder.MergeFrom(ListSubscriptionsRequest);
            }
            input.ReadMessage(subBuilder);
            ListSubscriptionsRequest = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///&#x2F; Openfeed Server Response
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class OpenfeedGatewayMessage : pb::IMessage<OpenfeedGatewayMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OpenfeedGatewayMessage> _parser = new pb::MessageParser<OpenfeedGatewayMessage>(() => new OpenfeedGatewayMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OpenfeedGatewayMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Openfeed.OpenfeedApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OpenfeedGatewayMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OpenfeedGatewayMessage(OpenfeedGatewayMessage other) : this() {
      switch (other.DataCase) {
        case DataOneofCase.LoginResponse:
          LoginResponse = other.LoginResponse.Clone();
          break;
        case DataOneofCase.LogoutResponse:
          LogoutResponse = other.LogoutResponse.Clone();
          break;
        case DataOneofCase.InstrumentResponse:
          InstrumentResponse = other.InstrumentResponse.Clone();
          break;
        case DataOneofCase.InstrumentReferenceResponse:
          InstrumentReferenceResponse = other.InstrumentReferenceResponse.Clone();
          break;
        case DataOneofCase.SubscriptionResponse:
          SubscriptionResponse = other.SubscriptionResponse.Clone();
          break;
        case DataOneofCase.MarketStatus:
          MarketStatus = other.MarketStatus.Clone();
          break;
        case DataOneofCase.HeartBeat:
          HeartBeat = other.HeartBeat.Clone();
          break;
        case DataOneofCase.InstrumentDefinition:
          InstrumentDefinition = other.InstrumentDefinition.Clone();
          break;
        case DataOneofCase.MarketSnapshot:
          MarketSnapshot = other.MarketSnapshot.Clone();
          break;
        case DataOneofCase.MarketUpdate:
          MarketUpdate = other.MarketUpdate.Clone();
          break;
        case DataOneofCase.VolumeAtPrice:
          VolumeAtPrice = other.VolumeAtPrice.Clone();
          break;
        case DataOneofCase.Ohlc:
          Ohlc = other.Ohlc.Clone();
          break;
        case DataOneofCase.ExchangeResponse:
          ExchangeResponse = other.ExchangeResponse.Clone();
          break;
        case DataOneofCase.InstrumentAction:
          InstrumentAction = other.InstrumentAction.Clone();
          break;
        case DataOneofCase.ListSubscriptionsResponse:
          ListSubscriptionsResponse = other.ListSubscriptionsResponse.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OpenfeedGatewayMessage Clone() {
      return new OpenfeedGatewayMessage(this);
    }

    /// <summary>Field number for the "loginResponse" field.</summary>
    public const int LoginResponseFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.LoginResponse LoginResponse {
      get { return dataCase_ == DataOneofCase.LoginResponse ? (global::Org.Openfeed.LoginResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.LoginResponse;
      }
    }

    /// <summary>Field number for the "logoutResponse" field.</summary>
    public const int LogoutResponseFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.LogoutResponse LogoutResponse {
      get { return dataCase_ == DataOneofCase.LogoutResponse ? (global::Org.Openfeed.LogoutResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.LogoutResponse;
      }
    }

    /// <summary>Field number for the "instrumentResponse" field.</summary>
    public const int InstrumentResponseFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.InstrumentResponse InstrumentResponse {
      get { return dataCase_ == DataOneofCase.InstrumentResponse ? (global::Org.Openfeed.InstrumentResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.InstrumentResponse;
      }
    }

    /// <summary>Field number for the "instrumentReferenceResponse" field.</summary>
    public const int InstrumentReferenceResponseFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.InstrumentReferenceResponse InstrumentReferenceResponse {
      get { return dataCase_ == DataOneofCase.InstrumentReferenceResponse ? (global::Org.Openfeed.InstrumentReferenceResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.InstrumentReferenceResponse;
      }
    }

    /// <summary>Field number for the "subscriptionResponse" field.</summary>
    public const int SubscriptionResponseFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.SubscriptionResponse SubscriptionResponse {
      get { return dataCase_ == DataOneofCase.SubscriptionResponse ? (global::Org.Openfeed.SubscriptionResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.SubscriptionResponse;
      }
    }

    /// <summary>Field number for the "marketStatus" field.</summary>
    public const int MarketStatusFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.MarketStatus MarketStatus {
      get { return dataCase_ == DataOneofCase.MarketStatus ? (global::Org.Openfeed.MarketStatus) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.MarketStatus;
      }
    }

    /// <summary>Field number for the "heartBeat" field.</summary>
    public const int HeartBeatFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.HeartBeat HeartBeat {
      get { return dataCase_ == DataOneofCase.HeartBeat ? (global::Org.Openfeed.HeartBeat) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.HeartBeat;
      }
    }

    /// <summary>Field number for the "instrumentDefinition" field.</summary>
    public const int InstrumentDefinitionFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.InstrumentDefinition InstrumentDefinition {
      get { return dataCase_ == DataOneofCase.InstrumentDefinition ? (global::Org.Openfeed.InstrumentDefinition) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.InstrumentDefinition;
      }
    }

    /// <summary>Field number for the "marketSnapshot" field.</summary>
    public const int MarketSnapshotFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.MarketSnapshot MarketSnapshot {
      get { return dataCase_ == DataOneofCase.MarketSnapshot ? (global::Org.Openfeed.MarketSnapshot) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.MarketSnapshot;
      }
    }

    /// <summary>Field number for the "marketUpdate" field.</summary>
    public const int MarketUpdateFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.MarketUpdate MarketUpdate {
      get { return dataCase_ == DataOneofCase.MarketUpdate ? (global::Org.Openfeed.MarketUpdate) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.MarketUpdate;
      }
    }

    /// <summary>Field number for the "volumeAtPrice" field.</summary>
    public const int VolumeAtPriceFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.VolumeAtPrice VolumeAtPrice {
      get { return dataCase_ == DataOneofCase.VolumeAtPrice ? (global::Org.Openfeed.VolumeAtPrice) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.VolumeAtPrice;
      }
    }

    /// <summary>Field number for the "ohlc" field.</summary>
    public const int OhlcFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.Ohlc Ohlc {
      get { return dataCase_ == DataOneofCase.Ohlc ? (global::Org.Openfeed.Ohlc) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Ohlc;
      }
    }

    /// <summary>Field number for the "exchangeResponse" field.</summary>
    public const int ExchangeResponseFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.ExchangeResponse ExchangeResponse {
      get { return dataCase_ == DataOneofCase.ExchangeResponse ? (global::Org.Openfeed.ExchangeResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.ExchangeResponse;
      }
    }

    /// <summary>Field number for the "instrumentAction" field.</summary>
    public const int InstrumentActionFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.InstrumentAction InstrumentAction {
      get { return dataCase_ == DataOneofCase.InstrumentAction ? (global::Org.Openfeed.InstrumentAction) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.InstrumentAction;
      }
    }

    /// <summary>Field number for the "listSubscriptionsResponse" field.</summary>
    public const int ListSubscriptionsResponseFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.ListSubscriptionsResponse ListSubscriptionsResponse {
      get { return dataCase_ == DataOneofCase.ListSubscriptionsResponse ? (global::Org.Openfeed.ListSubscriptionsResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.ListSubscriptionsResponse;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      LoginResponse = 1,
      LogoutResponse = 2,
      InstrumentResponse = 3,
      InstrumentReferenceResponse = 4,
      SubscriptionResponse = 5,
      MarketStatus = 6,
      HeartBeat = 7,
      InstrumentDefinition = 8,
      MarketSnapshot = 9,
      MarketUpdate = 10,
      VolumeAtPrice = 11,
      Ohlc = 12,
      ExchangeResponse = 13,
      InstrumentAction = 14,
      ListSubscriptionsResponse = 15,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OpenfeedGatewayMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OpenfeedGatewayMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LoginResponse, other.LoginResponse)) return false;
      if (!object.Equals(LogoutResponse, other.LogoutResponse)) return false;
      if (!object.Equals(InstrumentResponse, other.InstrumentResponse)) return false;
      if (!object.Equals(InstrumentReferenceResponse, other.InstrumentReferenceResponse)) return false;
      if (!object.Equals(SubscriptionResponse, other.SubscriptionResponse)) return false;
      if (!object.Equals(MarketStatus, other.MarketStatus)) return false;
      if (!object.Equals(HeartBeat, other.HeartBeat)) return false;
      if (!object.Equals(InstrumentDefinition, other.InstrumentDefinition)) return false;
      if (!object.Equals(MarketSnapshot, other.MarketSnapshot)) return false;
      if (!object.Equals(MarketUpdate, other.MarketUpdate)) return false;
      if (!object.Equals(VolumeAtPrice, other.VolumeAtPrice)) return false;
      if (!object.Equals(Ohlc, other.Ohlc)) return false;
      if (!object.Equals(ExchangeResponse, other.ExchangeResponse)) return false;
      if (!object.Equals(InstrumentAction, other.InstrumentAction)) return false;
      if (!object.Equals(ListSubscriptionsResponse, other.ListSubscriptionsResponse)) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dataCase_ == DataOneofCase.LoginResponse) hash ^= LoginResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.LogoutResponse) hash ^= LogoutResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.InstrumentResponse) hash ^= InstrumentResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.InstrumentReferenceResponse) hash ^= InstrumentReferenceResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.SubscriptionResponse) hash ^= SubscriptionResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.MarketStatus) hash ^= MarketStatus.GetHashCode();
      if (dataCase_ == DataOneofCase.HeartBeat) hash ^= HeartBeat.GetHashCode();
      if (dataCase_ == DataOneofCase.InstrumentDefinition) hash ^= InstrumentDefinition.GetHashCode();
      if (dataCase_ == DataOneofCase.MarketSnapshot) hash ^= MarketSnapshot.GetHashCode();
      if (dataCase_ == DataOneofCase.MarketUpdate) hash ^= MarketUpdate.GetHashCode();
      if (dataCase_ == DataOneofCase.VolumeAtPrice) hash ^= VolumeAtPrice.GetHashCode();
      if (dataCase_ == DataOneofCase.Ohlc) hash ^= Ohlc.GetHashCode();
      if (dataCase_ == DataOneofCase.ExchangeResponse) hash ^= ExchangeResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.InstrumentAction) hash ^= InstrumentAction.GetHashCode();
      if (dataCase_ == DataOneofCase.ListSubscriptionsResponse) hash ^= ListSubscriptionsResponse.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dataCase_ == DataOneofCase.LoginResponse) {
        output.WriteRawTag(10);
        output.WriteMessage(LoginResponse);
      }
      if (dataCase_ == DataOneofCase.LogoutResponse) {
        output.WriteRawTag(18);
        output.WriteMessage(LogoutResponse);
      }
      if (dataCase_ == DataOneofCase.InstrumentResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(InstrumentResponse);
      }
      if (dataCase_ == DataOneofCase.InstrumentReferenceResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(InstrumentReferenceResponse);
      }
      if (dataCase_ == DataOneofCase.SubscriptionResponse) {
        output.WriteRawTag(42);
        output.WriteMessage(SubscriptionResponse);
      }
      if (dataCase_ == DataOneofCase.MarketStatus) {
        output.WriteRawTag(50);
        output.WriteMessage(MarketStatus);
      }
      if (dataCase_ == DataOneofCase.HeartBeat) {
        output.WriteRawTag(58);
        output.WriteMessage(HeartBeat);
      }
      if (dataCase_ == DataOneofCase.InstrumentDefinition) {
        output.WriteRawTag(66);
        output.WriteMessage(InstrumentDefinition);
      }
      if (dataCase_ == DataOneofCase.MarketSnapshot) {
        output.WriteRawTag(74);
        output.WriteMessage(MarketSnapshot);
      }
      if (dataCase_ == DataOneofCase.MarketUpdate) {
        output.WriteRawTag(82);
        output.WriteMessage(MarketUpdate);
      }
      if (dataCase_ == DataOneofCase.VolumeAtPrice) {
        output.WriteRawTag(90);
        output.WriteMessage(VolumeAtPrice);
      }
      if (dataCase_ == DataOneofCase.Ohlc) {
        output.WriteRawTag(98);
        output.WriteMessage(Ohlc);
      }
      if (dataCase_ == DataOneofCase.ExchangeResponse) {
        output.WriteRawTag(106);
        output.WriteMessage(ExchangeResponse);
      }
      if (dataCase_ == DataOneofCase.InstrumentAction) {
        output.WriteRawTag(114);
        output.WriteMessage(InstrumentAction);
      }
      if (dataCase_ == DataOneofCase.ListSubscriptionsResponse) {
        output.WriteRawTag(122);
        output.WriteMessage(ListSubscriptionsResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dataCase_ == DataOneofCase.LoginResponse) {
        output.WriteRawTag(10);
        output.WriteMessage(LoginResponse);
      }
      if (dataCase_ == DataOneofCase.LogoutResponse) {
        output.WriteRawTag(18);
        output.WriteMessage(LogoutResponse);
      }
      if (dataCase_ == DataOneofCase.InstrumentResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(InstrumentResponse);
      }
      if (dataCase_ == DataOneofCase.InstrumentReferenceResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(InstrumentReferenceResponse);
      }
      if (dataCase_ == DataOneofCase.SubscriptionResponse) {
        output.WriteRawTag(42);
        output.WriteMessage(SubscriptionResponse);
      }
      if (dataCase_ == DataOneofCase.MarketStatus) {
        output.WriteRawTag(50);
        output.WriteMessage(MarketStatus);
      }
      if (dataCase_ == DataOneofCase.HeartBeat) {
        output.WriteRawTag(58);
        output.WriteMessage(HeartBeat);
      }
      if (dataCase_ == DataOneofCase.InstrumentDefinition) {
        output.WriteRawTag(66);
        output.WriteMessage(InstrumentDefinition);
      }
      if (dataCase_ == DataOneofCase.MarketSnapshot) {
        output.WriteRawTag(74);
        output.WriteMessage(MarketSnapshot);
      }
      if (dataCase_ == DataOneofCase.MarketUpdate) {
        output.WriteRawTag(82);
        output.WriteMessage(MarketUpdate);
      }
      if (dataCase_ == DataOneofCase.VolumeAtPrice) {
        output.WriteRawTag(90);
        output.WriteMessage(VolumeAtPrice);
      }
      if (dataCase_ == DataOneofCase.Ohlc) {
        output.WriteRawTag(98);
        output.WriteMessage(Ohlc);
      }
      if (dataCase_ == DataOneofCase.ExchangeResponse) {
        output.WriteRawTag(106);
        output.WriteMessage(ExchangeResponse);
      }
      if (dataCase_ == DataOneofCase.InstrumentAction) {
        output.WriteRawTag(114);
        output.WriteMessage(InstrumentAction);
      }
      if (dataCase_ == DataOneofCase.ListSubscriptionsResponse) {
        output.WriteRawTag(122);
        output.WriteMessage(ListSubscriptionsResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dataCase_ == DataOneofCase.LoginResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginResponse);
      }
      if (dataCase_ == DataOneofCase.LogoutResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogoutResponse);
      }
      if (dataCase_ == DataOneofCase.InstrumentResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InstrumentResponse);
      }
      if (dataCase_ == DataOneofCase.InstrumentReferenceResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InstrumentReferenceResponse);
      }
      if (dataCase_ == DataOneofCase.SubscriptionResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscriptionResponse);
      }
      if (dataCase_ == DataOneofCase.MarketStatus) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MarketStatus);
      }
      if (dataCase_ == DataOneofCase.HeartBeat) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeartBeat);
      }
      if (dataCase_ == DataOneofCase.InstrumentDefinition) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InstrumentDefinition);
      }
      if (dataCase_ == DataOneofCase.MarketSnapshot) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MarketSnapshot);
      }
      if (dataCase_ == DataOneofCase.MarketUpdate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MarketUpdate);
      }
      if (dataCase_ == DataOneofCase.VolumeAtPrice) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VolumeAtPrice);
      }
      if (dataCase_ == DataOneofCase.Ohlc) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ohlc);
      }
      if (dataCase_ == DataOneofCase.ExchangeResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExchangeResponse);
      }
      if (dataCase_ == DataOneofCase.InstrumentAction) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InstrumentAction);
      }
      if (dataCase_ == DataOneofCase.ListSubscriptionsResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ListSubscriptionsResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OpenfeedGatewayMessage other) {
      if (other == null) {
        return;
      }
      switch (other.DataCase) {
        case DataOneofCase.LoginResponse:
          if (LoginResponse == null) {
            LoginResponse = new global::Org.Openfeed.LoginResponse();
          }
          LoginResponse.MergeFrom(other.LoginResponse);
          break;
        case DataOneofCase.LogoutResponse:
          if (LogoutResponse == null) {
            LogoutResponse = new global::Org.Openfeed.LogoutResponse();
          }
          LogoutResponse.MergeFrom(other.LogoutResponse);
          break;
        case DataOneofCase.InstrumentResponse:
          if (InstrumentResponse == null) {
            InstrumentResponse = new global::Org.Openfeed.InstrumentResponse();
          }
          InstrumentResponse.MergeFrom(other.InstrumentResponse);
          break;
        case DataOneofCase.InstrumentReferenceResponse:
          if (InstrumentReferenceResponse == null) {
            InstrumentReferenceResponse = new global::Org.Openfeed.InstrumentReferenceResponse();
          }
          InstrumentReferenceResponse.MergeFrom(other.InstrumentReferenceResponse);
          break;
        case DataOneofCase.SubscriptionResponse:
          if (SubscriptionResponse == null) {
            SubscriptionResponse = new global::Org.Openfeed.SubscriptionResponse();
          }
          SubscriptionResponse.MergeFrom(other.SubscriptionResponse);
          break;
        case DataOneofCase.MarketStatus:
          if (MarketStatus == null) {
            MarketStatus = new global::Org.Openfeed.MarketStatus();
          }
          MarketStatus.MergeFrom(other.MarketStatus);
          break;
        case DataOneofCase.HeartBeat:
          if (HeartBeat == null) {
            HeartBeat = new global::Org.Openfeed.HeartBeat();
          }
          HeartBeat.MergeFrom(other.HeartBeat);
          break;
        case DataOneofCase.InstrumentDefinition:
          if (InstrumentDefinition == null) {
            InstrumentDefinition = new global::Org.Openfeed.InstrumentDefinition();
          }
          InstrumentDefinition.MergeFrom(other.InstrumentDefinition);
          break;
        case DataOneofCase.MarketSnapshot:
          if (MarketSnapshot == null) {
            MarketSnapshot = new global::Org.Openfeed.MarketSnapshot();
          }
          MarketSnapshot.MergeFrom(other.MarketSnapshot);
          break;
        case DataOneofCase.MarketUpdate:
          if (MarketUpdate == null) {
            MarketUpdate = new global::Org.Openfeed.MarketUpdate();
          }
          MarketUpdate.MergeFrom(other.MarketUpdate);
          break;
        case DataOneofCase.VolumeAtPrice:
          if (VolumeAtPrice == null) {
            VolumeAtPrice = new global::Org.Openfeed.VolumeAtPrice();
          }
          VolumeAtPrice.MergeFrom(other.VolumeAtPrice);
          break;
        case DataOneofCase.Ohlc:
          if (Ohlc == null) {
            Ohlc = new global::Org.Openfeed.Ohlc();
          }
          Ohlc.MergeFrom(other.Ohlc);
          break;
        case DataOneofCase.ExchangeResponse:
          if (ExchangeResponse == null) {
            ExchangeResponse = new global::Org.Openfeed.ExchangeResponse();
          }
          ExchangeResponse.MergeFrom(other.ExchangeResponse);
          break;
        case DataOneofCase.InstrumentAction:
          if (InstrumentAction == null) {
            InstrumentAction = new global::Org.Openfeed.InstrumentAction();
          }
          InstrumentAction.MergeFrom(other.InstrumentAction);
          break;
        case DataOneofCase.ListSubscriptionsResponse:
          if (ListSubscriptionsResponse == null) {
            ListSubscriptionsResponse = new global::Org.Openfeed.ListSubscriptionsResponse();
          }
          ListSubscriptionsResponse.MergeFrom(other.ListSubscriptionsResponse);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Org.Openfeed.LoginResponse subBuilder = new global::Org.Openfeed.LoginResponse();
            if (dataCase_ == DataOneofCase.LoginResponse) {
              subBuilder.MergeFrom(LoginResponse);
            }
            input.ReadMessage(subBuilder);
            LoginResponse = subBuilder;
            break;
          }
          case 18: {
            global::Org.Openfeed.LogoutResponse subBuilder = new global::Org.Openfeed.LogoutResponse();
            if (dataCase_ == DataOneofCase.LogoutResponse) {
              subBuilder.MergeFrom(LogoutResponse);
            }
            input.ReadMessage(subBuilder);
            LogoutResponse = subBuilder;
            break;
          }
          case 26: {
            global::Org.Openfeed.InstrumentResponse subBuilder = new global::Org.Openfeed.InstrumentResponse();
            if (dataCase_ == DataOneofCase.InstrumentResponse) {
              subBuilder.MergeFrom(InstrumentResponse);
            }
            input.ReadMessage(subBuilder);
            InstrumentResponse = subBuilder;
            break;
          }
          case 34: {
            global::Org.Openfeed.InstrumentReferenceResponse subBuilder = new global::Org.Openfeed.InstrumentReferenceResponse();
            if (dataCase_ == DataOneofCase.InstrumentReferenceResponse) {
              subBuilder.MergeFrom(InstrumentReferenceResponse);
            }
            input.ReadMessage(subBuilder);
            InstrumentReferenceResponse = subBuilder;
            break;
          }
          case 42: {
            global::Org.Openfeed.SubscriptionResponse subBuilder = new global::Org.Openfeed.SubscriptionResponse();
            if (dataCase_ == DataOneofCase.SubscriptionResponse) {
              subBuilder.MergeFrom(SubscriptionResponse);
            }
            input.ReadMessage(subBuilder);
            SubscriptionResponse = subBuilder;
            break;
          }
          case 50: {
            global::Org.Openfeed.MarketStatus subBuilder = new global::Org.Openfeed.MarketStatus();
            if (dataCase_ == DataOneofCase.MarketStatus) {
              subBuilder.MergeFrom(MarketStatus);
            }
            input.ReadMessage(subBuilder);
            MarketStatus = subBuilder;
            break;
          }
          case 58: {
            global::Org.Openfeed.HeartBeat subBuilder = new global::Org.Openfeed.HeartBeat();
            if (dataCase_ == DataOneofCase.HeartBeat) {
              subBuilder.MergeFrom(HeartBeat);
            }
            input.ReadMessage(subBuilder);
            HeartBeat = subBuilder;
            break;
          }
          case 66: {
            global::Org.Openfeed.InstrumentDefinition subBuilder = new global::Org.Openfeed.InstrumentDefinition();
            if (dataCase_ == DataOneofCase.InstrumentDefinition) {
              subBuilder.MergeFrom(InstrumentDefinition);
            }
            input.ReadMessage(subBuilder);
            InstrumentDefinition = subBuilder;
            break;
          }
          case 74: {
            global::Org.Openfeed.MarketSnapshot subBuilder = new global::Org.Openfeed.MarketSnapshot();
            if (dataCase_ == DataOneofCase.MarketSnapshot) {
              subBuilder.MergeFrom(MarketSnapshot);
            }
            input.ReadMessage(subBuilder);
            MarketSnapshot = subBuilder;
            break;
          }
          case 82: {
            global::Org.Openfeed.MarketUpdate subBuilder = new global::Org.Openfeed.MarketUpdate();
            if (dataCase_ == DataOneofCase.MarketUpdate) {
              subBuilder.MergeFrom(MarketUpdate);
            }
            input.ReadMessage(subBuilder);
            MarketUpdate = subBuilder;
            break;
          }
          case 90: {
            global::Org.Openfeed.VolumeAtPrice subBuilder = new global::Org.Openfeed.VolumeAtPrice();
            if (dataCase_ == DataOneofCase.VolumeAtPrice) {
              subBuilder.MergeFrom(VolumeAtPrice);
            }
            input.ReadMessage(subBuilder);
            VolumeAtPrice = subBuilder;
            break;
          }
          case 98: {
            global::Org.Openfeed.Ohlc subBuilder = new global::Org.Openfeed.Ohlc();
            if (dataCase_ == DataOneofCase.Ohlc) {
              subBuilder.MergeFrom(Ohlc);
            }
            input.ReadMessage(subBuilder);
            Ohlc = subBuilder;
            break;
          }
          case 106: {
            global::Org.Openfeed.ExchangeResponse subBuilder = new global::Org.Openfeed.ExchangeResponse();
            if (dataCase_ == DataOneofCase.ExchangeResponse) {
              subBuilder.MergeFrom(ExchangeResponse);
            }
            input.ReadMessage(subBuilder);
            ExchangeResponse = subBuilder;
            break;
          }
          case 114: {
            global::Org.Openfeed.InstrumentAction subBuilder = new global::Org.Openfeed.InstrumentAction();
            if (dataCase_ == DataOneofCase.InstrumentAction) {
              subBuilder.MergeFrom(InstrumentAction);
            }
            input.ReadMessage(subBuilder);
            InstrumentAction = subBuilder;
            break;
          }
          case 122: {
            global::Org.Openfeed.ListSubscriptionsResponse subBuilder = new global::Org.Openfeed.ListSubscriptionsResponse();
            if (dataCase_ == DataOneofCase.ListSubscriptionsResponse) {
              subBuilder.MergeFrom(ListSubscriptionsResponse);
            }
            input.ReadMessage(subBuilder);
            ListSubscriptionsResponse = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Org.Openfeed.LoginResponse subBuilder = new global::Org.Openfeed.LoginResponse();
            if (dataCase_ == DataOneofCase.LoginResponse) {
              subBuilder.MergeFrom(LoginResponse);
            }
            input.ReadMessage(subBuilder);
            LoginResponse = subBuilder;
            break;
          }
          case 18: {
            global::Org.Openfeed.LogoutResponse subBuilder = new global::Org.Openfeed.LogoutResponse();
            if (dataCase_ == DataOneofCase.LogoutResponse) {
              subBuilder.MergeFrom(LogoutResponse);
            }
            input.ReadMessage(subBuilder);
            LogoutResponse = subBuilder;
            break;
          }
          case 26: {
            global::Org.Openfeed.InstrumentResponse subBuilder = new global::Org.Openfeed.InstrumentResponse();
            if (dataCase_ == DataOneofCase.InstrumentResponse) {
              subBuilder.MergeFrom(InstrumentResponse);
            }
            input.ReadMessage(subBuilder);
            InstrumentResponse = subBuilder;
            break;
          }
          case 34: {
            global::Org.Openfeed.InstrumentReferenceResponse subBuilder = new global::Org.Openfeed.InstrumentReferenceResponse();
            if (dataCase_ == DataOneofCase.InstrumentReferenceResponse) {
              subBuilder.MergeFrom(InstrumentReferenceResponse);
            }
            input.ReadMessage(subBuilder);
            InstrumentReferenceResponse = subBuilder;
            break;
          }
          case 42: {
            global::Org.Openfeed.SubscriptionResponse subBuilder = new global::Org.Openfeed.SubscriptionResponse();
            if (dataCase_ == DataOneofCase.SubscriptionResponse) {
              subBuilder.MergeFrom(SubscriptionResponse);
            }
            input.ReadMessage(subBuilder);
            SubscriptionResponse = subBuilder;
            break;
          }
          case 50: {
            global::Org.Openfeed.MarketStatus subBuilder = new global::Org.Openfeed.MarketStatus();
            if (dataCase_ == DataOneofCase.MarketStatus) {
              subBuilder.MergeFrom(MarketStatus);
            }
            input.ReadMessage(subBuilder);
            MarketStatus = subBuilder;
            break;
          }
          case 58: {
            global::Org.Openfeed.HeartBeat subBuilder = new global::Org.Openfeed.HeartBeat();
            if (dataCase_ == DataOneofCase.HeartBeat) {
              subBuilder.MergeFrom(HeartBeat);
            }
            input.ReadMessage(subBuilder);
            HeartBeat = subBuilder;
            break;
          }
          case 66: {
            global::Org.Openfeed.InstrumentDefinition subBuilder = new global::Org.Openfeed.InstrumentDefinition();
            if (dataCase_ == DataOneofCase.InstrumentDefinition) {
              subBuilder.MergeFrom(InstrumentDefinition);
            }
            input.ReadMessage(subBuilder);
            InstrumentDefinition = subBuilder;
            break;
          }
          case 74: {
            global::Org.Openfeed.MarketSnapshot subBuilder = new global::Org.Openfeed.MarketSnapshot();
            if (dataCase_ == DataOneofCase.MarketSnapshot) {
              subBuilder.MergeFrom(MarketSnapshot);
            }
            input.ReadMessage(subBuilder);
            MarketSnapshot = subBuilder;
            break;
          }
          case 82: {
            global::Org.Openfeed.MarketUpdate subBuilder = new global::Org.Openfeed.MarketUpdate();
            if (dataCase_ == DataOneofCase.MarketUpdate) {
              subBuilder.MergeFrom(MarketUpdate);
            }
            input.ReadMessage(subBuilder);
            MarketUpdate = subBuilder;
            break;
          }
          case 90: {
            global::Org.Openfeed.VolumeAtPrice subBuilder = new global::Org.Openfeed.VolumeAtPrice();
            if (dataCase_ == DataOneofCase.VolumeAtPrice) {
              subBuilder.MergeFrom(VolumeAtPrice);
            }
            input.ReadMessage(subBuilder);
            VolumeAtPrice = subBuilder;
            break;
          }
          case 98: {
            global::Org.Openfeed.Ohlc subBuilder = new global::Org.Openfeed.Ohlc();
            if (dataCase_ == DataOneofCase.Ohlc) {
              subBuilder.MergeFrom(Ohlc);
            }
            input.ReadMessage(subBuilder);
            Ohlc = subBuilder;
            break;
          }
          case 106: {
            global::Org.Openfeed.ExchangeResponse subBuilder = new global::Org.Openfeed.ExchangeResponse();
            if (dataCase_ == DataOneofCase.ExchangeResponse) {
              subBuilder.MergeFrom(ExchangeResponse);
            }
            input.ReadMessage(subBuilder);
            ExchangeResponse = subBuilder;
            break;
          }
          case 114: {
            global::Org.Openfeed.InstrumentAction subBuilder = new global::Org.Openfeed.InstrumentAction();
            if (dataCase_ == DataOneofCase.InstrumentAction) {
              subBuilder.MergeFrom(InstrumentAction);
            }
            input.ReadMessage(subBuilder);
            InstrumentAction = subBuilder;
            break;
          }
          case 122: {
            global::Org.Openfeed.ListSubscriptionsResponse subBuilder = new global::Org.Openfeed.ListSubscriptionsResponse();
            if (dataCase_ == DataOneofCase.ListSubscriptionsResponse) {
              subBuilder.MergeFrom(ListSubscriptionsResponse);
            }
            input.ReadMessage(subBuilder);
            ListSubscriptionsResponse = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///&#x2F;/////////////////
  /// Serivce Messages
  ///&#x2F;////////////////
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Status : pb::IMessage<Status>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Status> _parser = new pb::MessageParser<Status>(() => new Status());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Status> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Openfeed.OpenfeedApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Status() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Status(Status other) : this() {
      result_ = other.result_;
      message_ = other.message_;
      service_ = other.service_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Status Clone() {
      return new Status(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Org.Openfeed.Result result_ = global::Org.Openfeed.Result.UnknownResult;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service" field.</summary>
    public const int ServiceFieldNumber = 3;
    private global::Org.Openfeed.Service service_ = global::Org.Openfeed.Service.UnknownService;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.Service Service {
      get { return service_; }
      set {
        service_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Status);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Status other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Message != other.Message) return false;
      if (Service != other.Service) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != global::Org.Openfeed.Result.UnknownResult) hash ^= Result.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (Service != global::Org.Openfeed.Service.UnknownService) hash ^= Service.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Result != global::Org.Openfeed.Result.UnknownResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (Service != global::Org.Openfeed.Service.UnknownService) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Service);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Result != global::Org.Openfeed.Result.UnknownResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (Service != global::Org.Openfeed.Service.UnknownService) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Service);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Result != global::Org.Openfeed.Result.UnknownResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (Service != global::Org.Openfeed.Service.UnknownService) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Service);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Status other) {
      if (other == null) {
        return;
      }
      if (other.Result != global::Org.Openfeed.Result.UnknownResult) {
        Result = other.Result;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.Service != global::Org.Openfeed.Service.UnknownService) {
        Service = other.Service;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Org.Openfeed.Result) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 24: {
            Service = (global::Org.Openfeed.Service) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Org.Openfeed.Result) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 24: {
            Service = (global::Org.Openfeed.Service) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///&#x2F; Login
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LoginRequest : pb::IMessage<LoginRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Openfeed.OpenfeedApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoginRequest(LoginRequest other) : this() {
      correlationId_ = other.correlationId_;
      username_ = other.username_;
      password_ = other.password_;
      clientVersion_ = other.clientVersion_;
      protocolVersion_ = other.protocolVersion_;
      jwt_ = other.jwt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "correlationId" field.</summary>
    public const int CorrelationIdFieldNumber = 1;
    private long correlationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CorrelationId {
      get { return correlationId_; }
      set {
        correlationId_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clientVersion" field.</summary>
    public const int ClientVersionFieldNumber = 4;
    private string clientVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientVersion {
      get { return clientVersion_; }
      set {
        clientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "protocolVersion" field.</summary>
    public const int ProtocolVersionFieldNumber = 5;
    private int protocolVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ProtocolVersion {
      get { return protocolVersion_; }
      set {
        protocolVersion_ = value;
      }
    }

    /// <summary>Field number for the "jwt" field.</summary>
    public const int JwtFieldNumber = 6;
    private string jwt_ = "";
    /// <summary>
    ///&#x2F; JSON Web Token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Jwt {
      get { return jwt_; }
      set {
        jwt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CorrelationId != other.CorrelationId) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      if (ClientVersion != other.ClientVersion) return false;
      if (ProtocolVersion != other.ProtocolVersion) return false;
      if (Jwt != other.Jwt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CorrelationId != 0L) hash ^= CorrelationId.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (ClientVersion.Length != 0) hash ^= ClientVersion.GetHashCode();
      if (ProtocolVersion != 0) hash ^= ProtocolVersion.GetHashCode();
      if (Jwt.Length != 0) hash ^= Jwt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (ClientVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ClientVersion);
      }
      if (ProtocolVersion != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(ProtocolVersion);
      }
      if (Jwt.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Jwt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (ClientVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ClientVersion);
      }
      if (ProtocolVersion != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(ProtocolVersion);
      }
      if (Jwt.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Jwt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CorrelationId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(CorrelationId);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (ClientVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientVersion);
      }
      if (ProtocolVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ProtocolVersion);
      }
      if (Jwt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Jwt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.CorrelationId != 0L) {
        CorrelationId = other.CorrelationId;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.ClientVersion.Length != 0) {
        ClientVersion = other.ClientVersion;
      }
      if (other.ProtocolVersion != 0) {
        ProtocolVersion = other.ProtocolVersion;
      }
      if (other.Jwt.Length != 0) {
        Jwt = other.Jwt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
          case 34: {
            ClientVersion = input.ReadString();
            break;
          }
          case 40: {
            ProtocolVersion = input.ReadSInt32();
            break;
          }
          case 50: {
            Jwt = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
          case 34: {
            ClientVersion = input.ReadString();
            break;
          }
          case 40: {
            ProtocolVersion = input.ReadSInt32();
            break;
          }
          case 50: {
            Jwt = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LoginResponse : pb::IMessage<LoginResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoginResponse> _parser = new pb::MessageParser<LoginResponse>(() => new LoginResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LoginResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Openfeed.OpenfeedApiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoginResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoginResponse(LoginResponse other) : this() {
      correlationId_ = other.correlationId_;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoginResponse Clone() {
      return new LoginResponse(this);
    }

    /// <summary>Field number for the "correlationId" field.</summary>
    public const int CorrelationIdFieldNumber = 1;
    private long correlationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CorrelationId {
      get { return correlationId_; }
      set {
        correlationId_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Org.Openfeed.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 3;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LoginResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LoginResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CorrelationId != other.CorrelationId) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CorrelationId != 0L) hash ^= CorrelationId.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CorrelationId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(CorrelationId);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LoginResponse other) {
      if (other == null) {
        return;
      }
      if (other.CorrelationId != 0L) {
        CorrelationId = other.CorrelationId;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Org.Openfeed.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            if (status_ == null) {
              Status = new global::Org.Openfeed.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            if (status_ == null) {
              Status = new global::Org.Openfeed.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///&#x2F; Logout
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LogoutRequest : pb::IMessage<LogoutRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LogoutRequest> _parser = new pb::MessageParser<LogoutRequest>(() => new LogoutRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LogoutRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Openfeed.OpenfeedApiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogoutRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogoutRequest(LogoutRequest other) : this() {
      correlationId_ = other.correlationId_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogoutRequest Clone() {
      return new LogoutRequest(this);
    }

    /// <summary>Field number for the "correlationId" field.</summary>
    public const int CorrelationIdFieldNumber = 1;
    private long correlationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CorrelationId {
      get { return correlationId_; }
      set {
        correlationId_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 3;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LogoutRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LogoutRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CorrelationId != other.CorrelationId) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CorrelationId != 0L) hash ^= CorrelationId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CorrelationId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(CorrelationId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LogoutRequest other) {
      if (other == null) {
        return;
      }
      if (other.CorrelationId != 0L) {
        CorrelationId = other.CorrelationId;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LogoutResponse : pb::IMessage<LogoutResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LogoutResponse> _parser = new pb::MessageParser<LogoutResponse>(() => new LogoutResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LogoutResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Openfeed.OpenfeedApiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogoutResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogoutResponse(LogoutResponse other) : this() {
      correlationId_ = other.correlationId_;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogoutResponse Clone() {
      return new LogoutResponse(this);
    }

    /// <summary>Field number for the "correlationId" field.</summary>
    public const int CorrelationIdFieldNumber = 1;
    private long correlationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CorrelationId {
      get { return correlationId_; }
      set {
        correlationId_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Org.Openfeed.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LogoutResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LogoutResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CorrelationId != other.CorrelationId) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CorrelationId != 0L) hash ^= CorrelationId.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CorrelationId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(CorrelationId);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LogoutResponse other) {
      if (other == null) {
        return;
      }
      if (other.CorrelationId != 0L) {
        CorrelationId = other.CorrelationId;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Org.Openfeed.Status();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            if (status_ == null) {
              Status = new global::Org.Openfeed.Status();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            if (status_ == null) {
              Status = new global::Org.Openfeed.Status();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///&#x2F; Instrument Definition(s), will stream InstrumentDefinition(s)
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class InstrumentRequest : pb::IMessage<InstrumentRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InstrumentRequest> _parser = new pb::MessageParser<InstrumentRequest>(() => new InstrumentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InstrumentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Openfeed.OpenfeedApiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstrumentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstrumentRequest(InstrumentRequest other) : this() {
      correlationId_ = other.correlationId_;
      token_ = other.token_;
      instrumentType_ = other.instrumentType_.Clone();
      spreadType_ = other.spreadType_.Clone();
      version_ = other.version_;
      switch (other.RequestCase) {
        case RequestOneofCase.Symbol:
          Symbol = other.Symbol;
          break;
        case RequestOneofCase.MarketId:
          MarketId = other.MarketId;
          break;
        case RequestOneofCase.Exchange:
          Exchange = other.Exchange;
          break;
        case RequestOneofCase.ChannelId:
          ChannelId = other.ChannelId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstrumentRequest Clone() {
      return new InstrumentRequest(this);
    }

    /// <summary>Field number for the "correlationId" field.</summary>
    public const int CorrelationIdFieldNumber = 1;
    private long correlationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CorrelationId {
      get { return correlationId_; }
      set {
        correlationId_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instrumentType" field.</summary>
    public const int InstrumentTypeFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Org.Openfeed.InstrumentDefinition.Types.InstrumentType> _repeated_instrumentType_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::Org.Openfeed.InstrumentDefinition.Types.InstrumentType) x);
    private readonly pbc::RepeatedField<global::Org.Openfeed.InstrumentDefinition.Types.InstrumentType> instrumentType_ = new pbc::RepeatedField<global::Org.Openfeed.InstrumentDefinition.Types.InstrumentType>();
    /// <summary>
    ///&#x2F; Filter on these instrument types
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Org.Openfeed.InstrumentDefinition.Types.InstrumentType> InstrumentType {
      get { return instrumentType_; }
    }

    /// <summary>Field number for the "spreadType" field.</summary>
    public const int SpreadTypeFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_spreadType_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> spreadType_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///&#x2F; Filter on these spread types
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> SpreadType {
      get { return spreadType_; }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 5;
    private int version_;
    /// <summary>
    ///&#x2F; If version >= 1 then will send InstrumentDefinition in the InstrumentResponse
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return HasSymbol ? (string) request_ : ""; }
      set {
        request_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        requestCase_ = RequestOneofCase.Symbol;
      }
    }
    /// <summary>Gets whether the "symbol" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSymbol {
      get { return requestCase_ == RequestOneofCase.Symbol; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "symbol" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSymbol() {
      if (HasSymbol) {
        ClearRequest();
      }
    }

    /// <summary>Field number for the "marketId" field.</summary>
    public const int MarketIdFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MarketId {
      get { return HasMarketId ? (long) request_ : 0L; }
      set {
        request_ = value;
        requestCase_ = RequestOneofCase.MarketId;
      }
    }
    /// <summary>Gets whether the "marketId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMarketId {
      get { return requestCase_ == RequestOneofCase.MarketId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "marketId" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMarketId() {
      if (HasMarketId) {
        ClearRequest();
      }
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Exchange {
      get { return HasExchange ? (string) request_ : ""; }
      set {
        request_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        requestCase_ = RequestOneofCase.Exchange;
      }
    }
    /// <summary>Gets whether the "exchange" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExchange {
      get { return requestCase_ == RequestOneofCase.Exchange; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "exchange" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExchange() {
      if (HasExchange) {
        ClearRequest();
      }
    }

    /// <summary>Field number for the "channelId" field.</summary>
    public const int ChannelIdFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChannelId {
      get { return HasChannelId ? (int) request_ : 0; }
      set {
        request_ = value;
        requestCase_ = RequestOneofCase.ChannelId;
      }
    }
    /// <summary>Gets whether the "channelId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChannelId {
      get { return requestCase_ == RequestOneofCase.ChannelId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "channelId" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChannelId() {
      if (HasChannelId) {
        ClearRequest();
      }
    }

    private object request_;
    /// <summary>Enum of possible cases for the "request" oneof.</summary>
    public enum RequestOneofCase {
      None = 0,
      Symbol = 10,
      MarketId = 11,
      Exchange = 12,
      ChannelId = 13,
    }
    private RequestOneofCase requestCase_ = RequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestOneofCase RequestCase {
      get { return requestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequest() {
      requestCase_ = RequestOneofCase.None;
      request_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InstrumentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InstrumentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CorrelationId != other.CorrelationId) return false;
      if (Token != other.Token) return false;
      if(!instrumentType_.Equals(other.instrumentType_)) return false;
      if(!spreadType_.Equals(other.spreadType_)) return false;
      if (Version != other.Version) return false;
      if (Symbol != other.Symbol) return false;
      if (MarketId != other.MarketId) return false;
      if (Exchange != other.Exchange) return false;
      if (ChannelId != other.ChannelId) return false;
      if (RequestCase != other.RequestCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CorrelationId != 0L) hash ^= CorrelationId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      hash ^= instrumentType_.GetHashCode();
      hash ^= spreadType_.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (HasSymbol) hash ^= Symbol.GetHashCode();
      if (HasMarketId) hash ^= MarketId.GetHashCode();
      if (HasExchange) hash ^= Exchange.GetHashCode();
      if (HasChannelId) hash ^= ChannelId.GetHashCode();
      hash ^= (int) requestCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      instrumentType_.WriteTo(output, _repeated_instrumentType_codec);
      spreadType_.WriteTo(output, _repeated_spreadType_codec);
      if (Version != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(Version);
      }
      if (HasSymbol) {
        output.WriteRawTag(82);
        output.WriteString(Symbol);
      }
      if (HasMarketId) {
        output.WriteRawTag(88);
        output.WriteSInt64(MarketId);
      }
      if (HasExchange) {
        output.WriteRawTag(98);
        output.WriteString(Exchange);
      }
      if (HasChannelId) {
        output.WriteRawTag(104);
        output.WriteSInt32(ChannelId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      instrumentType_.WriteTo(ref output, _repeated_instrumentType_codec);
      spreadType_.WriteTo(ref output, _repeated_spreadType_codec);
      if (Version != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(Version);
      }
      if (HasSymbol) {
        output.WriteRawTag(82);
        output.WriteString(Symbol);
      }
      if (HasMarketId) {
        output.WriteRawTag(88);
        output.WriteSInt64(MarketId);
      }
      if (HasExchange) {
        output.WriteRawTag(98);
        output.WriteString(Exchange);
      }
      if (HasChannelId) {
        output.WriteRawTag(104);
        output.WriteSInt32(ChannelId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CorrelationId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(CorrelationId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      size += instrumentType_.CalculateSize(_repeated_instrumentType_codec);
      size += spreadType_.CalculateSize(_repeated_spreadType_codec);
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Version);
      }
      if (HasSymbol) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (HasMarketId) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(MarketId);
      }
      if (HasExchange) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchange);
      }
      if (HasChannelId) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ChannelId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InstrumentRequest other) {
      if (other == null) {
        return;
      }
      if (other.CorrelationId != 0L) {
        CorrelationId = other.CorrelationId;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      instrumentType_.Add(other.instrumentType_);
      spreadType_.Add(other.spreadType_);
      if (other.Version != 0) {
        Version = other.Version;
      }
      switch (other.RequestCase) {
        case RequestOneofCase.Symbol:
          Symbol = other.Symbol;
          break;
        case RequestOneofCase.MarketId:
          MarketId = other.MarketId;
          break;
        case RequestOneofCase.Exchange:
          Exchange = other.Exchange;
          break;
        case RequestOneofCase.ChannelId:
          ChannelId = other.ChannelId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            instrumentType_.AddEntriesFrom(input, _repeated_instrumentType_codec);
            break;
          }
          case 34: {
            spreadType_.AddEntriesFrom(input, _repeated_spreadType_codec);
            break;
          }
          case 40: {
            Version = input.ReadSInt32();
            break;
          }
          case 82: {
            Symbol = input.ReadString();
            break;
          }
          case 88: {
            MarketId = input.ReadSInt64();
            break;
          }
          case 98: {
            Exchange = input.ReadString();
            break;
          }
          case 104: {
            ChannelId = input.ReadSInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            instrumentType_.AddEntriesFrom(ref input, _repeated_instrumentType_codec);
            break;
          }
          case 34: {
            spreadType_.AddEntriesFrom(ref input, _repeated_spreadType_codec);
            break;
          }
          case 40: {
            Version = input.ReadSInt32();
            break;
          }
          case 82: {
            Symbol = input.ReadString();
            break;
          }
          case 88: {
            MarketId = input.ReadSInt64();
            break;
          }
          case 98: {
            Exchange = input.ReadString();
            break;
          }
          case 104: {
            ChannelId = input.ReadSInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class InstrumentResponse : pb::IMessage<InstrumentResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InstrumentResponse> _parser = new pb::MessageParser<InstrumentResponse>(() => new InstrumentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InstrumentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Openfeed.OpenfeedApiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstrumentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstrumentResponse(InstrumentResponse other) : this() {
      correlationId_ = other.correlationId_;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      numberOfDefinitions_ = other.numberOfDefinitions_;
      symbol_ = other.symbol_;
      marketId_ = other.marketId_;
      exchange_ = other.exchange_;
      channelId_ = other.channelId_;
      exchangeId_ = other.exchangeId_;
      instrumentDefinition_ = other.instrumentDefinition_ != null ? other.instrumentDefinition_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstrumentResponse Clone() {
      return new InstrumentResponse(this);
    }

    /// <summary>Field number for the "correlationId" field.</summary>
    public const int CorrelationIdFieldNumber = 1;
    private long correlationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CorrelationId {
      get { return correlationId_; }
      set {
        correlationId_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Org.Openfeed.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "numberOfDefinitions" field.</summary>
    public const int NumberOfDefinitionsFieldNumber = 3;
    private int numberOfDefinitions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumberOfDefinitions {
      get { return numberOfDefinitions_; }
      set {
        numberOfDefinitions_ = value;
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 4;
    private string symbol_ = "";
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "marketId" field.</summary>
    public const int MarketIdFieldNumber = 5;
    private long marketId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MarketId {
      get { return marketId_; }
      set {
        marketId_ = value;
      }
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 6;
    private string exchange_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Exchange {
      get { return exchange_; }
      set {
        exchange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channelId" field.</summary>
    public const int ChannelIdFieldNumber = 7;
    private int channelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "exchangeId" field.</summary>
    public const int ExchangeIdFieldNumber = 8;
    private int exchangeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ExchangeId {
      get { return exchangeId_; }
      set {
        exchangeId_ = value;
      }
    }

    /// <summary>Field number for the "instrumentDefinition" field.</summary>
    public const int InstrumentDefinitionFieldNumber = 15;
    private global::Org.Openfeed.InstrumentDefinition instrumentDefinition_;
    /// <summary>
    ///&#x2F; Will be set if InstrumentRequest.version >= 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.InstrumentDefinition InstrumentDefinition {
      get { return instrumentDefinition_; }
      set {
        instrumentDefinition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InstrumentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InstrumentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CorrelationId != other.CorrelationId) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if (NumberOfDefinitions != other.NumberOfDefinitions) return false;
      if (Symbol != other.Symbol) return false;
      if (MarketId != other.MarketId) return false;
      if (Exchange != other.Exchange) return false;
      if (ChannelId != other.ChannelId) return false;
      if (ExchangeId != other.ExchangeId) return false;
      if (!object.Equals(InstrumentDefinition, other.InstrumentDefinition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CorrelationId != 0L) hash ^= CorrelationId.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (NumberOfDefinitions != 0) hash ^= NumberOfDefinitions.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (MarketId != 0L) hash ^= MarketId.GetHashCode();
      if (Exchange.Length != 0) hash ^= Exchange.GetHashCode();
      if (ChannelId != 0) hash ^= ChannelId.GetHashCode();
      if (ExchangeId != 0) hash ^= ExchangeId.GetHashCode();
      if (instrumentDefinition_ != null) hash ^= InstrumentDefinition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (NumberOfDefinitions != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(NumberOfDefinitions);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Symbol);
      }
      if (MarketId != 0L) {
        output.WriteRawTag(40);
        output.WriteSInt64(MarketId);
      }
      if (Exchange.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Exchange);
      }
      if (ChannelId != 0) {
        output.WriteRawTag(56);
        output.WriteSInt32(ChannelId);
      }
      if (ExchangeId != 0) {
        output.WriteRawTag(64);
        output.WriteSInt32(ExchangeId);
      }
      if (instrumentDefinition_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(InstrumentDefinition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (NumberOfDefinitions != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(NumberOfDefinitions);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Symbol);
      }
      if (MarketId != 0L) {
        output.WriteRawTag(40);
        output.WriteSInt64(MarketId);
      }
      if (Exchange.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Exchange);
      }
      if (ChannelId != 0) {
        output.WriteRawTag(56);
        output.WriteSInt32(ChannelId);
      }
      if (ExchangeId != 0) {
        output.WriteRawTag(64);
        output.WriteSInt32(ExchangeId);
      }
      if (instrumentDefinition_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(InstrumentDefinition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CorrelationId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(CorrelationId);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (NumberOfDefinitions != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(NumberOfDefinitions);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (MarketId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(MarketId);
      }
      if (Exchange.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchange);
      }
      if (ChannelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ChannelId);
      }
      if (ExchangeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ExchangeId);
      }
      if (instrumentDefinition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InstrumentDefinition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InstrumentResponse other) {
      if (other == null) {
        return;
      }
      if (other.CorrelationId != 0L) {
        CorrelationId = other.CorrelationId;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Org.Openfeed.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.NumberOfDefinitions != 0) {
        NumberOfDefinitions = other.NumberOfDefinitions;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.MarketId != 0L) {
        MarketId = other.MarketId;
      }
      if (other.Exchange.Length != 0) {
        Exchange = other.Exchange;
      }
      if (other.ChannelId != 0) {
        ChannelId = other.ChannelId;
      }
      if (other.ExchangeId != 0) {
        ExchangeId = other.ExchangeId;
      }
      if (other.instrumentDefinition_ != null) {
        if (instrumentDefinition_ == null) {
          InstrumentDefinition = new global::Org.Openfeed.InstrumentDefinition();
        }
        InstrumentDefinition.MergeFrom(other.InstrumentDefinition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            if (status_ == null) {
              Status = new global::Org.Openfeed.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 24: {
            NumberOfDefinitions = input.ReadSInt32();
            break;
          }
          case 34: {
            Symbol = input.ReadString();
            break;
          }
          case 40: {
            MarketId = input.ReadSInt64();
            break;
          }
          case 50: {
            Exchange = input.ReadString();
            break;
          }
          case 56: {
            ChannelId = input.ReadSInt32();
            break;
          }
          case 64: {
            ExchangeId = input.ReadSInt32();
            break;
          }
          case 122: {
            if (instrumentDefinition_ == null) {
              InstrumentDefinition = new global::Org.Openfeed.InstrumentDefinition();
            }
            input.ReadMessage(InstrumentDefinition);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            if (status_ == null) {
              Status = new global::Org.Openfeed.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 24: {
            NumberOfDefinitions = input.ReadSInt32();
            break;
          }
          case 34: {
            Symbol = input.ReadString();
            break;
          }
          case 40: {
            MarketId = input.ReadSInt64();
            break;
          }
          case 50: {
            Exchange = input.ReadString();
            break;
          }
          case 56: {
            ChannelId = input.ReadSInt32();
            break;
          }
          case 64: {
            ExchangeId = input.ReadSInt32();
            break;
          }
          case 122: {
            if (instrumentDefinition_ == null) {
              InstrumentDefinition = new global::Org.Openfeed.InstrumentDefinition();
            }
            input.ReadMessage(InstrumentDefinition);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///&#x2F; Instrument References, returns InstrumentReferenceResponse(s)
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class InstrumentReferenceRequest : pb::IMessage<InstrumentReferenceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InstrumentReferenceRequest> _parser = new pb::MessageParser<InstrumentReferenceRequest>(() => new InstrumentReferenceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InstrumentReferenceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Openfeed.OpenfeedApiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstrumentReferenceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstrumentReferenceRequest(InstrumentReferenceRequest other) : this() {
      correlationId_ = other.correlationId_;
      token_ = other.token_;
      switch (other.RequestCase) {
        case RequestOneofCase.Symbol:
          Symbol = other.Symbol;
          break;
        case RequestOneofCase.MarketId:
          MarketId = other.MarketId;
          break;
        case RequestOneofCase.Exchange:
          Exchange = other.Exchange;
          break;
        case RequestOneofCase.ChannelId:
          ChannelId = other.ChannelId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstrumentReferenceRequest Clone() {
      return new InstrumentReferenceRequest(this);
    }

    /// <summary>Field number for the "correlationId" field.</summary>
    public const int CorrelationIdFieldNumber = 1;
    private long correlationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CorrelationId {
      get { return correlationId_; }
      set {
        correlationId_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return HasSymbol ? (string) request_ : ""; }
      set {
        request_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        requestCase_ = RequestOneofCase.Symbol;
      }
    }
    /// <summary>Gets whether the "symbol" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSymbol {
      get { return requestCase_ == RequestOneofCase.Symbol; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "symbol" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSymbol() {
      if (HasSymbol) {
        ClearRequest();
      }
    }

    /// <summary>Field number for the "marketId" field.</summary>
    public const int MarketIdFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MarketId {
      get { return HasMarketId ? (long) request_ : 0L; }
      set {
        request_ = value;
        requestCase_ = RequestOneofCase.MarketId;
      }
    }
    /// <summary>Gets whether the "marketId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMarketId {
      get { return requestCase_ == RequestOneofCase.MarketId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "marketId" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMarketId() {
      if (HasMarketId) {
        ClearRequest();
      }
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Exchange {
      get { return HasExchange ? (string) request_ : ""; }
      set {
        request_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        requestCase_ = RequestOneofCase.Exchange;
      }
    }
    /// <summary>Gets whether the "exchange" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExchange {
      get { return requestCase_ == RequestOneofCase.Exchange; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "exchange" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExchange() {
      if (HasExchange) {
        ClearRequest();
      }
    }

    /// <summary>Field number for the "channelId" field.</summary>
    public const int ChannelIdFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChannelId {
      get { return HasChannelId ? (int) request_ : 0; }
      set {
        request_ = value;
        requestCase_ = RequestOneofCase.ChannelId;
      }
    }
    /// <summary>Gets whether the "channelId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChannelId {
      get { return requestCase_ == RequestOneofCase.ChannelId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "channelId" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChannelId() {
      if (HasChannelId) {
        ClearRequest();
      }
    }

    private object request_;
    /// <summary>Enum of possible cases for the "request" oneof.</summary>
    public enum RequestOneofCase {
      None = 0,
      Symbol = 10,
      MarketId = 11,
      Exchange = 12,
      ChannelId = 13,
    }
    private RequestOneofCase requestCase_ = RequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestOneofCase RequestCase {
      get { return requestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequest() {
      requestCase_ = RequestOneofCase.None;
      request_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InstrumentReferenceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InstrumentReferenceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CorrelationId != other.CorrelationId) return false;
      if (Token != other.Token) return false;
      if (Symbol != other.Symbol) return false;
      if (MarketId != other.MarketId) return false;
      if (Exchange != other.Exchange) return false;
      if (ChannelId != other.ChannelId) return false;
      if (RequestCase != other.RequestCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CorrelationId != 0L) hash ^= CorrelationId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (HasSymbol) hash ^= Symbol.GetHashCode();
      if (HasMarketId) hash ^= MarketId.GetHashCode();
      if (HasExchange) hash ^= Exchange.GetHashCode();
      if (HasChannelId) hash ^= ChannelId.GetHashCode();
      hash ^= (int) requestCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (HasSymbol) {
        output.WriteRawTag(82);
        output.WriteString(Symbol);
      }
      if (HasMarketId) {
        output.WriteRawTag(88);
        output.WriteSInt64(MarketId);
      }
      if (HasExchange) {
        output.WriteRawTag(98);
        output.WriteString(Exchange);
      }
      if (HasChannelId) {
        output.WriteRawTag(104);
        output.WriteSInt32(ChannelId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (HasSymbol) {
        output.WriteRawTag(82);
        output.WriteString(Symbol);
      }
      if (HasMarketId) {
        output.WriteRawTag(88);
        output.WriteSInt64(MarketId);
      }
      if (HasExchange) {
        output.WriteRawTag(98);
        output.WriteString(Exchange);
      }
      if (HasChannelId) {
        output.WriteRawTag(104);
        output.WriteSInt32(ChannelId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CorrelationId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(CorrelationId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (HasSymbol) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (HasMarketId) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(MarketId);
      }
      if (HasExchange) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchange);
      }
      if (HasChannelId) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ChannelId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InstrumentReferenceRequest other) {
      if (other == null) {
        return;
      }
      if (other.CorrelationId != 0L) {
        CorrelationId = other.CorrelationId;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      switch (other.RequestCase) {
        case RequestOneofCase.Symbol:
          Symbol = other.Symbol;
          break;
        case RequestOneofCase.MarketId:
          MarketId = other.MarketId;
          break;
        case RequestOneofCase.Exchange:
          Exchange = other.Exchange;
          break;
        case RequestOneofCase.ChannelId:
          ChannelId = other.ChannelId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 82: {
            Symbol = input.ReadString();
            break;
          }
          case 88: {
            MarketId = input.ReadSInt64();
            break;
          }
          case 98: {
            Exchange = input.ReadString();
            break;
          }
          case 104: {
            ChannelId = input.ReadSInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 82: {
            Symbol = input.ReadString();
            break;
          }
          case 88: {
            MarketId = input.ReadSInt64();
            break;
          }
          case 98: {
            Exchange = input.ReadString();
            break;
          }
          case 104: {
            ChannelId = input.ReadSInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class InstrumentReferenceResponse : pb::IMessage<InstrumentReferenceResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InstrumentReferenceResponse> _parser = new pb::MessageParser<InstrumentReferenceResponse>(() => new InstrumentReferenceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InstrumentReferenceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Openfeed.OpenfeedApiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstrumentReferenceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstrumentReferenceResponse(InstrumentReferenceResponse other) : this() {
      correlationId_ = other.correlationId_;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      numberOfDefinitions_ = other.numberOfDefinitions_;
      channelId_ = other.channelId_;
      marketId_ = other.marketId_;
      symbol_ = other.symbol_;
      exchange_ = other.exchange_;
      ddfSymbol_ = other.ddfSymbol_;
      ddfExchange_ = other.ddfExchange_;
      ddfBaseCode_ = other.ddfBaseCode_;
      exchangeSymbol_ = other.exchangeSymbol_;
      exchangeId_ = other.exchangeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstrumentReferenceResponse Clone() {
      return new InstrumentReferenceResponse(this);
    }

    /// <summary>Field number for the "correlationId" field.</summary>
    public const int CorrelationIdFieldNumber = 1;
    private long correlationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CorrelationId {
      get { return correlationId_; }
      set {
        correlationId_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Org.Openfeed.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "numberOfDefinitions" field.</summary>
    public const int NumberOfDefinitionsFieldNumber = 3;
    private int numberOfDefinitions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumberOfDefinitions {
      get { return numberOfDefinitions_; }
      set {
        numberOfDefinitions_ = value;
      }
    }

    /// <summary>Field number for the "channelId" field.</summary>
    public const int ChannelIdFieldNumber = 4;
    private int channelId_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "marketId" field.</summary>
    public const int MarketIdFieldNumber = 5;
    private long marketId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MarketId {
      get { return marketId_; }
      set {
        marketId_ = value;
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 6;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 7;
    private string exchange_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Exchange {
      get { return exchange_; }
      set {
        exchange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ddfSymbol" field.</summary>
    public const int DdfSymbolFieldNumber = 8;
    private string ddfSymbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DdfSymbol {
      get { return ddfSymbol_; }
      set {
        ddfSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ddfExchange" field.</summary>
    public const int DdfExchangeFieldNumber = 9;
    private string ddfExchange_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DdfExchange {
      get { return ddfExchange_; }
      set {
        ddfExchange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ddfBaseCode" field.</summary>
    public const int DdfBaseCodeFieldNumber = 10;
    private string ddfBaseCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DdfBaseCode {
      get { return ddfBaseCode_; }
      set {
        ddfBaseCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exchangeSymbol" field.</summary>
    public const int ExchangeSymbolFieldNumber = 11;
    private string exchangeSymbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExchangeSymbol {
      get { return exchangeSymbol_; }
      set {
        exchangeSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exchangeId" field.</summary>
    public const int ExchangeIdFieldNumber = 12;
    private int exchangeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ExchangeId {
      get { return exchangeId_; }
      set {
        exchangeId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InstrumentReferenceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InstrumentReferenceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CorrelationId != other.CorrelationId) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if (NumberOfDefinitions != other.NumberOfDefinitions) return false;
      if (ChannelId != other.ChannelId) return false;
      if (MarketId != other.MarketId) return false;
      if (Symbol != other.Symbol) return false;
      if (Exchange != other.Exchange) return false;
      if (DdfSymbol != other.DdfSymbol) return false;
      if (DdfExchange != other.DdfExchange) return false;
      if (DdfBaseCode != other.DdfBaseCode) return false;
      if (ExchangeSymbol != other.ExchangeSymbol) return false;
      if (ExchangeId != other.ExchangeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CorrelationId != 0L) hash ^= CorrelationId.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (NumberOfDefinitions != 0) hash ^= NumberOfDefinitions.GetHashCode();
      if (ChannelId != 0) hash ^= ChannelId.GetHashCode();
      if (MarketId != 0L) hash ^= MarketId.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Exchange.Length != 0) hash ^= Exchange.GetHashCode();
      if (DdfSymbol.Length != 0) hash ^= DdfSymbol.GetHashCode();
      if (DdfExchange.Length != 0) hash ^= DdfExchange.GetHashCode();
      if (DdfBaseCode.Length != 0) hash ^= DdfBaseCode.GetHashCode();
      if (ExchangeSymbol.Length != 0) hash ^= ExchangeSymbol.GetHashCode();
      if (ExchangeId != 0) hash ^= ExchangeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (NumberOfDefinitions != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(NumberOfDefinitions);
      }
      if (ChannelId != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(ChannelId);
      }
      if (MarketId != 0L) {
        output.WriteRawTag(40);
        output.WriteSInt64(MarketId);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Symbol);
      }
      if (Exchange.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Exchange);
      }
      if (DdfSymbol.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DdfSymbol);
      }
      if (DdfExchange.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(DdfExchange);
      }
      if (DdfBaseCode.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(DdfBaseCode);
      }
      if (ExchangeSymbol.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ExchangeSymbol);
      }
      if (ExchangeId != 0) {
        output.WriteRawTag(96);
        output.WriteSInt32(ExchangeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (NumberOfDefinitions != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(NumberOfDefinitions);
      }
      if (ChannelId != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(ChannelId);
      }
      if (MarketId != 0L) {
        output.WriteRawTag(40);
        output.WriteSInt64(MarketId);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Symbol);
      }
      if (Exchange.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Exchange);
      }
      if (DdfSymbol.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DdfSymbol);
      }
      if (DdfExchange.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(DdfExchange);
      }
      if (DdfBaseCode.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(DdfBaseCode);
      }
      if (ExchangeSymbol.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ExchangeSymbol);
      }
      if (ExchangeId != 0) {
        output.WriteRawTag(96);
        output.WriteSInt32(ExchangeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CorrelationId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(CorrelationId);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (NumberOfDefinitions != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(NumberOfDefinitions);
      }
      if (ChannelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ChannelId);
      }
      if (MarketId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(MarketId);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Exchange.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchange);
      }
      if (DdfSymbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DdfSymbol);
      }
      if (DdfExchange.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DdfExchange);
      }
      if (DdfBaseCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DdfBaseCode);
      }
      if (ExchangeSymbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExchangeSymbol);
      }
      if (ExchangeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ExchangeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InstrumentReferenceResponse other) {
      if (other == null) {
        return;
      }
      if (other.CorrelationId != 0L) {
        CorrelationId = other.CorrelationId;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Org.Openfeed.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.NumberOfDefinitions != 0) {
        NumberOfDefinitions = other.NumberOfDefinitions;
      }
      if (other.ChannelId != 0) {
        ChannelId = other.ChannelId;
      }
      if (other.MarketId != 0L) {
        MarketId = other.MarketId;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Exchange.Length != 0) {
        Exchange = other.Exchange;
      }
      if (other.DdfSymbol.Length != 0) {
        DdfSymbol = other.DdfSymbol;
      }
      if (other.DdfExchange.Length != 0) {
        DdfExchange = other.DdfExchange;
      }
      if (other.DdfBaseCode.Length != 0) {
        DdfBaseCode = other.DdfBaseCode;
      }
      if (other.ExchangeSymbol.Length != 0) {
        ExchangeSymbol = other.ExchangeSymbol;
      }
      if (other.ExchangeId != 0) {
        ExchangeId = other.ExchangeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            if (status_ == null) {
              Status = new global::Org.Openfeed.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 24: {
            NumberOfDefinitions = input.ReadSInt32();
            break;
          }
          case 32: {
            ChannelId = input.ReadSInt32();
            break;
          }
          case 40: {
            MarketId = input.ReadSInt64();
            break;
          }
          case 50: {
            Symbol = input.ReadString();
            break;
          }
          case 58: {
            Exchange = input.ReadString();
            break;
          }
          case 66: {
            DdfSymbol = input.ReadString();
            break;
          }
          case 74: {
            DdfExchange = input.ReadString();
            break;
          }
          case 82: {
            DdfBaseCode = input.ReadString();
            break;
          }
          case 90: {
            ExchangeSymbol = input.ReadString();
            break;
          }
          case 96: {
            ExchangeId = input.ReadSInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            if (status_ == null) {
              Status = new global::Org.Openfeed.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 24: {
            NumberOfDefinitions = input.ReadSInt32();
            break;
          }
          case 32: {
            ChannelId = input.ReadSInt32();
            break;
          }
          case 40: {
            MarketId = input.ReadSInt64();
            break;
          }
          case 50: {
            Symbol = input.ReadString();
            break;
          }
          case 58: {
            Exchange = input.ReadString();
            break;
          }
          case 66: {
            DdfSymbol = input.ReadString();
            break;
          }
          case 74: {
            DdfExchange = input.ReadString();
            break;
          }
          case 82: {
            DdfBaseCode = input.ReadString();
            break;
          }
          case 90: {
            ExchangeSymbol = input.ReadString();
            break;
          }
          case 96: {
            ExchangeId = input.ReadSInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///&#x2F; Exchange Request, returns ExchangeResponse.  Gives available exchanges.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ExchangeRequest : pb::IMessage<ExchangeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExchangeRequest> _parser = new pb::MessageParser<ExchangeRequest>(() => new ExchangeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExchangeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Openfeed.OpenfeedApiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExchangeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExchangeRequest(ExchangeRequest other) : this() {
      correlationId_ = other.correlationId_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExchangeRequest Clone() {
      return new ExchangeRequest(this);
    }

    /// <summary>Field number for the "correlationId" field.</summary>
    public const int CorrelationIdFieldNumber = 1;
    private long correlationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CorrelationId {
      get { return correlationId_; }
      set {
        correlationId_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExchangeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExchangeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CorrelationId != other.CorrelationId) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CorrelationId != 0L) hash ^= CorrelationId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CorrelationId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(CorrelationId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExchangeRequest other) {
      if (other == null) {
        return;
      }
      if (other.CorrelationId != 0L) {
        CorrelationId = other.CorrelationId;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ExchangeResponse : pb::IMessage<ExchangeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExchangeResponse> _parser = new pb::MessageParser<ExchangeResponse>(() => new ExchangeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExchangeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Openfeed.OpenfeedApiReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExchangeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExchangeResponse(ExchangeResponse other) : this() {
      correlationId_ = other.correlationId_;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      exchanges_ = other.exchanges_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExchangeResponse Clone() {
      return new ExchangeResponse(this);
    }

    /// <summary>Field number for the "correlationId" field.</summary>
    public const int CorrelationIdFieldNumber = 1;
    private long correlationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CorrelationId {
      get { return correlationId_; }
      set {
        correlationId_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Org.Openfeed.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "exchanges" field.</summary>
    public const int ExchangesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Org.Openfeed.ExchangeResponse.Types.Exchange> _repeated_exchanges_codec
        = pb::FieldCodec.ForMessage(26, global::Org.Openfeed.ExchangeResponse.Types.Exchange.Parser);
    private readonly pbc::RepeatedField<global::Org.Openfeed.ExchangeResponse.Types.Exchange> exchanges_ = new pbc::RepeatedField<global::Org.Openfeed.ExchangeResponse.Types.Exchange>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Org.Openfeed.ExchangeResponse.Types.Exchange> Exchanges {
      get { return exchanges_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExchangeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExchangeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CorrelationId != other.CorrelationId) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if(!exchanges_.Equals(other.exchanges_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CorrelationId != 0L) hash ^= CorrelationId.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= exchanges_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      exchanges_.WriteTo(output, _repeated_exchanges_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      exchanges_.WriteTo(ref output, _repeated_exchanges_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CorrelationId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(CorrelationId);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += exchanges_.CalculateSize(_repeated_exchanges_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExchangeResponse other) {
      if (other == null) {
        return;
      }
      if (other.CorrelationId != 0L) {
        CorrelationId = other.CorrelationId;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Org.Openfeed.Status();
        }
        Status.MergeFrom(other.Status);
      }
      exchanges_.Add(other.exchanges_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            if (status_ == null) {
              Status = new global::Org.Openfeed.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 26: {
            exchanges_.AddEntriesFrom(input, _repeated_exchanges_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            if (status_ == null) {
              Status = new global::Org.Openfeed.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 26: {
            exchanges_.AddEntriesFrom(ref input, _repeated_exchanges_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ExchangeResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Exchange : pb::IMessage<Exchange>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Exchange> _parser = new pb::MessageParser<Exchange>(() => new Exchange());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Exchange> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Org.Openfeed.ExchangeResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Exchange() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Exchange(Exchange other) : this() {
          code_ = other.code_;
          description_ = other.description_;
          aliases_ = other.aliases_.Clone();
          exchangeId_ = other.exchangeId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Exchange Clone() {
          return new Exchange(this);
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 1;
        private string code_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Code {
          get { return code_; }
          set {
            code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 2;
        private string description_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "aliases" field.</summary>
        public const int AliasesFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _repeated_aliases_codec
            = pb::FieldCodec.ForString(26);
        private readonly pbc::RepeatedField<string> aliases_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Aliases {
          get { return aliases_; }
        }

        /// <summary>Field number for the "exchangeId" field.</summary>
        public const int ExchangeIdFieldNumber = 4;
        private int exchangeId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int ExchangeId {
          get { return exchangeId_; }
          set {
            exchangeId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Exchange);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Exchange other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Code != other.Code) return false;
          if (Description != other.Description) return false;
          if(!aliases_.Equals(other.aliases_)) return false;
          if (ExchangeId != other.ExchangeId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Code.Length != 0) hash ^= Code.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          hash ^= aliases_.GetHashCode();
          if (ExchangeId != 0) hash ^= ExchangeId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Code.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Code);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Description);
          }
          aliases_.WriteTo(output, _repeated_aliases_codec);
          if (ExchangeId != 0) {
            output.WriteRawTag(32);
            output.WriteSInt32(ExchangeId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Code.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Code);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Description);
          }
          aliases_.WriteTo(ref output, _repeated_aliases_codec);
          if (ExchangeId != 0) {
            output.WriteRawTag(32);
            output.WriteSInt32(ExchangeId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Code.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          size += aliases_.CalculateSize(_repeated_aliases_codec);
          if (ExchangeId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ExchangeId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Exchange other) {
          if (other == null) {
            return;
          }
          if (other.Code.Length != 0) {
            Code = other.Code;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          aliases_.Add(other.aliases_);
          if (other.ExchangeId != 0) {
            ExchangeId = other.ExchangeId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Code = input.ReadString();
                break;
              }
              case 18: {
                Description = input.ReadString();
                break;
              }
              case 26: {
                aliases_.AddEntriesFrom(input, _repeated_aliases_codec);
                break;
              }
              case 32: {
                ExchangeId = input.ReadSInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Code = input.ReadString();
                break;
              }
              case 18: {
                Description = input.ReadString();
                break;
              }
              case 26: {
                aliases_.AddEntriesFrom(ref input, _repeated_aliases_codec);
                break;
              }
              case 32: {
                ExchangeId = input.ReadSInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  ///&#x2F; Bulk subscription filter.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BulkSubscriptionFilter : pb::IMessage<BulkSubscriptionFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BulkSubscriptionFilter> _parser = new pb::MessageParser<BulkSubscriptionFilter>(() => new BulkSubscriptionFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BulkSubscriptionFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Openfeed.OpenfeedApiReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BulkSubscriptionFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BulkSubscriptionFilter(BulkSubscriptionFilter other) : this() {
      symbolType_ = other.symbolType_;
      symbolPattern_ = other.symbolPattern_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BulkSubscriptionFilter Clone() {
      return new BulkSubscriptionFilter(this);
    }

    /// <summary>Field number for the "symbolType" field.</summary>
    public const int SymbolTypeFieldNumber = 1;
    private global::Org.Openfeed.SymbolType symbolType_ = global::Org.Openfeed.SymbolType.Barchart;
    /// <summary>
    ///&#x2F; Type of the symbol: Barchart or Exchange. Barchart is the default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.SymbolType SymbolType {
      get { return symbolType_; }
      set {
        symbolType_ = value;
      }
    }

    /// <summary>Field number for the "symbolPattern" field.</summary>
    public const int SymbolPatternFieldNumber = 2;
    private string symbolPattern_ = "";
    /// <summary>
    ///&#x2F; regular expression pattern for the symbol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SymbolPattern {
      get { return symbolPattern_; }
      set {
        symbolPattern_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BulkSubscriptionFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BulkSubscriptionFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SymbolType != other.SymbolType) return false;
      if (SymbolPattern != other.SymbolPattern) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SymbolType != global::Org.Openfeed.SymbolType.Barchart) hash ^= SymbolType.GetHashCode();
      if (SymbolPattern.Length != 0) hash ^= SymbolPattern.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SymbolType != global::Org.Openfeed.SymbolType.Barchart) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SymbolType);
      }
      if (SymbolPattern.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SymbolPattern);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SymbolType != global::Org.Openfeed.SymbolType.Barchart) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SymbolType);
      }
      if (SymbolPattern.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SymbolPattern);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SymbolType != global::Org.Openfeed.SymbolType.Barchart) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SymbolType);
      }
      if (SymbolPattern.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SymbolPattern);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BulkSubscriptionFilter other) {
      if (other == null) {
        return;
      }
      if (other.SymbolType != global::Org.Openfeed.SymbolType.Barchart) {
        SymbolType = other.SymbolType;
      }
      if (other.SymbolPattern.Length != 0) {
        SymbolPattern = other.SymbolPattern;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SymbolType = (global::Org.Openfeed.SymbolType) input.ReadEnum();
            break;
          }
          case 18: {
            SymbolPattern = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SymbolType = (global::Org.Openfeed.SymbolType) input.ReadEnum();
            break;
          }
          case 18: {
            SymbolPattern = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///&#x2F; Subscription Request
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SubscriptionRequest : pb::IMessage<SubscriptionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubscriptionRequest> _parser = new pb::MessageParser<SubscriptionRequest>(() => new SubscriptionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubscriptionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Openfeed.OpenfeedApiReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscriptionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscriptionRequest(SubscriptionRequest other) : this() {
      correlationId_ = other.correlationId_;
      token_ = other.token_;
      service_ = other.service_;
      unsubscribe_ = other.unsubscribe_;
      requests_ = other.requests_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscriptionRequest Clone() {
      return new SubscriptionRequest(this);
    }

    /// <summary>Field number for the "correlationId" field.</summary>
    public const int CorrelationIdFieldNumber = 1;
    private long correlationId_;
    /// <summary>
    ///&#x2F; Client-assigned id for this request.  Response will include same id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CorrelationId {
      get { return correlationId_; }
      set {
        correlationId_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service" field.</summary>
    public const int ServiceFieldNumber = 3;
    private global::Org.Openfeed.Service service_ = global::Org.Openfeed.Service.UnknownService;
    /// <summary>
    ///&#x2F; Preferred service (realtime or delayed). REAL_TIME is the default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.Service Service {
      get { return service_; }
      set {
        service_ = value;
      }
    }

    /// <summary>Field number for the "unsubscribe" field.</summary>
    public const int UnsubscribeFieldNumber = 4;
    private bool unsubscribe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Unsubscribe {
      get { return unsubscribe_; }
      set {
        unsubscribe_ = value;
      }
    }

    /// <summary>Field number for the "requests" field.</summary>
    public const int RequestsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Org.Openfeed.SubscriptionRequest.Types.Request> _repeated_requests_codec
        = pb::FieldCodec.ForMessage(42, global::Org.Openfeed.SubscriptionRequest.Types.Request.Parser);
    private readonly pbc::RepeatedField<global::Org.Openfeed.SubscriptionRequest.Types.Request> requests_ = new pbc::RepeatedField<global::Org.Openfeed.SubscriptionRequest.Types.Request>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Org.Openfeed.SubscriptionRequest.Types.Request> Requests {
      get { return requests_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubscriptionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubscriptionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CorrelationId != other.CorrelationId) return false;
      if (Token != other.Token) return false;
      if (Service != other.Service) return false;
      if (Unsubscribe != other.Unsubscribe) return false;
      if(!requests_.Equals(other.requests_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CorrelationId != 0L) hash ^= CorrelationId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (Service != global::Org.Openfeed.Service.UnknownService) hash ^= Service.GetHashCode();
      if (Unsubscribe != false) hash ^= Unsubscribe.GetHashCode();
      hash ^= requests_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (Service != global::Org.Openfeed.Service.UnknownService) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Service);
      }
      if (Unsubscribe != false) {
        output.WriteRawTag(32);
        output.WriteBool(Unsubscribe);
      }
      requests_.WriteTo(output, _repeated_requests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (Service != global::Org.Openfeed.Service.UnknownService) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Service);
      }
      if (Unsubscribe != false) {
        output.WriteRawTag(32);
        output.WriteBool(Unsubscribe);
      }
      requests_.WriteTo(ref output, _repeated_requests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CorrelationId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(CorrelationId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (Service != global::Org.Openfeed.Service.UnknownService) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Service);
      }
      if (Unsubscribe != false) {
        size += 1 + 1;
      }
      size += requests_.CalculateSize(_repeated_requests_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubscriptionRequest other) {
      if (other == null) {
        return;
      }
      if (other.CorrelationId != 0L) {
        CorrelationId = other.CorrelationId;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.Service != global::Org.Openfeed.Service.UnknownService) {
        Service = other.Service;
      }
      if (other.Unsubscribe != false) {
        Unsubscribe = other.Unsubscribe;
      }
      requests_.Add(other.requests_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 24: {
            Service = (global::Org.Openfeed.Service) input.ReadEnum();
            break;
          }
          case 32: {
            Unsubscribe = input.ReadBool();
            break;
          }
          case 42: {
            requests_.AddEntriesFrom(input, _repeated_requests_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 24: {
            Service = (global::Org.Openfeed.Service) input.ReadEnum();
            break;
          }
          case 32: {
            Unsubscribe = input.ReadBool();
            break;
          }
          case 42: {
            requests_.AddEntriesFrom(ref input, _repeated_requests_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SubscriptionRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Request : pb::IMessage<Request>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Org.Openfeed.SubscriptionRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Request(Request other) : this() {
          subscriptionType_ = other.subscriptionType_.Clone();
          snapshotIntervalSeconds_ = other.snapshotIntervalSeconds_;
          instrumentType_ = other.instrumentType_.Clone();
          bulkSubscriptionFilter_ = other.bulkSubscriptionFilter_.Clone();
          spreadTypeFilter_ = other.spreadTypeFilter_.Clone();
          subscriptionDoNotSendInstruments_ = other.subscriptionDoNotSendInstruments_;
          subscriptionDoNotSendSnapshots_ = other.subscriptionDoNotSendSnapshots_;
          switch (other.DataCase) {
            case DataOneofCase.Symbol:
              Symbol = other.Symbol;
              break;
            case DataOneofCase.MarketId:
              MarketId = other.MarketId;
              break;
            case DataOneofCase.Exchange:
              Exchange = other.Exchange;
              break;
            case DataOneofCase.ChannelId:
              ChannelId = other.ChannelId;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "symbol" field.</summary>
        public const int SymbolFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Symbol {
          get { return HasSymbol ? (string) data_ : ""; }
          set {
            data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            dataCase_ = DataOneofCase.Symbol;
          }
        }
        /// <summary>Gets whether the "symbol" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSymbol {
          get { return dataCase_ == DataOneofCase.Symbol; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "symbol" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSymbol() {
          if (HasSymbol) {
            ClearData();
          }
        }

        /// <summary>Field number for the "marketId" field.</summary>
        public const int MarketIdFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long MarketId {
          get { return HasMarketId ? (long) data_ : 0L; }
          set {
            data_ = value;
            dataCase_ = DataOneofCase.MarketId;
          }
        }
        /// <summary>Gets whether the "marketId" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMarketId {
          get { return dataCase_ == DataOneofCase.MarketId; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "marketId" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMarketId() {
          if (HasMarketId) {
            ClearData();
          }
        }

        /// <summary>Field number for the "exchange" field.</summary>
        public const int ExchangeFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Exchange {
          get { return HasExchange ? (string) data_ : ""; }
          set {
            data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            dataCase_ = DataOneofCase.Exchange;
          }
        }
        /// <summary>Gets whether the "exchange" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasExchange {
          get { return dataCase_ == DataOneofCase.Exchange; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "exchange" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearExchange() {
          if (HasExchange) {
            ClearData();
          }
        }

        /// <summary>Field number for the "channelId" field.</summary>
        public const int ChannelIdFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int ChannelId {
          get { return HasChannelId ? (int) data_ : 0; }
          set {
            data_ = value;
            dataCase_ = DataOneofCase.ChannelId;
          }
        }
        /// <summary>Gets whether the "channelId" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasChannelId {
          get { return dataCase_ == DataOneofCase.ChannelId; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "channelId" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearChannelId() {
          if (HasChannelId) {
            ClearData();
          }
        }

        /// <summary>Field number for the "subscriptionType" field.</summary>
        public const int SubscriptionTypeFieldNumber = 10;
        private static readonly pb::FieldCodec<global::Org.Openfeed.SubscriptionType> _repeated_subscriptionType_codec
            = pb::FieldCodec.ForEnum(82, x => (int) x, x => (global::Org.Openfeed.SubscriptionType) x);
        private readonly pbc::RepeatedField<global::Org.Openfeed.SubscriptionType> subscriptionType_ = new pbc::RepeatedField<global::Org.Openfeed.SubscriptionType>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Org.Openfeed.SubscriptionType> SubscriptionType {
          get { return subscriptionType_; }
        }

        /// <summary>Field number for the "snapshotIntervalSeconds" field.</summary>
        public const int SnapshotIntervalSecondsFieldNumber = 11;
        private int snapshotIntervalSeconds_;
        /// <summary>
        ///&#x2F; 0 = send only current snapshot once, else send at interval seconds 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int SnapshotIntervalSeconds {
          get { return snapshotIntervalSeconds_; }
          set {
            snapshotIntervalSeconds_ = value;
          }
        }

        /// <summary>Field number for the "instrumentType" field.</summary>
        public const int InstrumentTypeFieldNumber = 12;
        private static readonly pb::FieldCodec<global::Org.Openfeed.InstrumentDefinition.Types.InstrumentType> _repeated_instrumentType_codec
            = pb::FieldCodec.ForEnum(98, x => (int) x, x => (global::Org.Openfeed.InstrumentDefinition.Types.InstrumentType) x);
        private readonly pbc::RepeatedField<global::Org.Openfeed.InstrumentDefinition.Types.InstrumentType> instrumentType_ = new pbc::RepeatedField<global::Org.Openfeed.InstrumentDefinition.Types.InstrumentType>();
        /// <summary>
        ///&#x2F; Spreads and Options must be explicitly requested.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Org.Openfeed.InstrumentDefinition.Types.InstrumentType> InstrumentType {
          get { return instrumentType_; }
        }

        /// <summary>Field number for the "bulkSubscriptionFilter" field.</summary>
        public const int BulkSubscriptionFilterFieldNumber = 13;
        private static readonly pb::FieldCodec<global::Org.Openfeed.BulkSubscriptionFilter> _repeated_bulkSubscriptionFilter_codec
            = pb::FieldCodec.ForMessage(106, global::Org.Openfeed.BulkSubscriptionFilter.Parser);
        private readonly pbc::RepeatedField<global::Org.Openfeed.BulkSubscriptionFilter> bulkSubscriptionFilter_ = new pbc::RepeatedField<global::Org.Openfeed.BulkSubscriptionFilter>();
        /// <summary>
        ///&#x2F; Filter for the exchange and channel subscriptions.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Org.Openfeed.BulkSubscriptionFilter> BulkSubscriptionFilter {
          get { return bulkSubscriptionFilter_; }
        }

        /// <summary>Field number for the "spreadTypeFilter" field.</summary>
        public const int SpreadTypeFilterFieldNumber = 14;
        private static readonly pb::FieldCodec<string> _repeated_spreadTypeFilter_codec
            = pb::FieldCodec.ForString(114);
        private readonly pbc::RepeatedField<string> spreadTypeFilter_ = new pbc::RepeatedField<string>();
        /// <summary>
        ///&#x2F; Filter for Spread Types
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> SpreadTypeFilter {
          get { return spreadTypeFilter_; }
        }

        /// <summary>Field number for the "subscriptionDoNotSendInstruments" field.</summary>
        public const int SubscriptionDoNotSendInstrumentsFieldNumber = 15;
        private bool subscriptionDoNotSendInstruments_;
        /// <summary>
        ///&#x2F; Do not send instrument(s) on successful subscription
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool SubscriptionDoNotSendInstruments {
          get { return subscriptionDoNotSendInstruments_; }
          set {
            subscriptionDoNotSendInstruments_ = value;
          }
        }

        /// <summary>Field number for the "subscriptionDoNotSendSnapshots" field.</summary>
        public const int SubscriptionDoNotSendSnapshotsFieldNumber = 16;
        private bool subscriptionDoNotSendSnapshots_;
        /// <summary>
        ///&#x2F; Do not send market snapshot(s) on successful subscription
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool SubscriptionDoNotSendSnapshots {
          get { return subscriptionDoNotSendSnapshots_; }
          set {
            subscriptionDoNotSendSnapshots_ = value;
          }
        }

        private object data_;
        /// <summary>Enum of possible cases for the "data" oneof.</summary>
        public enum DataOneofCase {
          None = 0,
          Symbol = 1,
          MarketId = 2,
          Exchange = 3,
          ChannelId = 4,
        }
        private DataOneofCase dataCase_ = DataOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DataOneofCase DataCase {
          get { return dataCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearData() {
          dataCase_ = DataOneofCase.None;
          data_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Symbol != other.Symbol) return false;
          if (MarketId != other.MarketId) return false;
          if (Exchange != other.Exchange) return false;
          if (ChannelId != other.ChannelId) return false;
          if(!subscriptionType_.Equals(other.subscriptionType_)) return false;
          if (SnapshotIntervalSeconds != other.SnapshotIntervalSeconds) return false;
          if(!instrumentType_.Equals(other.instrumentType_)) return false;
          if(!bulkSubscriptionFilter_.Equals(other.bulkSubscriptionFilter_)) return false;
          if(!spreadTypeFilter_.Equals(other.spreadTypeFilter_)) return false;
          if (SubscriptionDoNotSendInstruments != other.SubscriptionDoNotSendInstruments) return false;
          if (SubscriptionDoNotSendSnapshots != other.SubscriptionDoNotSendSnapshots) return false;
          if (DataCase != other.DataCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasSymbol) hash ^= Symbol.GetHashCode();
          if (HasMarketId) hash ^= MarketId.GetHashCode();
          if (HasExchange) hash ^= Exchange.GetHashCode();
          if (HasChannelId) hash ^= ChannelId.GetHashCode();
          hash ^= subscriptionType_.GetHashCode();
          if (SnapshotIntervalSeconds != 0) hash ^= SnapshotIntervalSeconds.GetHashCode();
          hash ^= instrumentType_.GetHashCode();
          hash ^= bulkSubscriptionFilter_.GetHashCode();
          hash ^= spreadTypeFilter_.GetHashCode();
          if (SubscriptionDoNotSendInstruments != false) hash ^= SubscriptionDoNotSendInstruments.GetHashCode();
          if (SubscriptionDoNotSendSnapshots != false) hash ^= SubscriptionDoNotSendSnapshots.GetHashCode();
          hash ^= (int) dataCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasSymbol) {
            output.WriteRawTag(10);
            output.WriteString(Symbol);
          }
          if (HasMarketId) {
            output.WriteRawTag(16);
            output.WriteSInt64(MarketId);
          }
          if (HasExchange) {
            output.WriteRawTag(26);
            output.WriteString(Exchange);
          }
          if (HasChannelId) {
            output.WriteRawTag(32);
            output.WriteSInt32(ChannelId);
          }
          subscriptionType_.WriteTo(output, _repeated_subscriptionType_codec);
          if (SnapshotIntervalSeconds != 0) {
            output.WriteRawTag(88);
            output.WriteSInt32(SnapshotIntervalSeconds);
          }
          instrumentType_.WriteTo(output, _repeated_instrumentType_codec);
          bulkSubscriptionFilter_.WriteTo(output, _repeated_bulkSubscriptionFilter_codec);
          spreadTypeFilter_.WriteTo(output, _repeated_spreadTypeFilter_codec);
          if (SubscriptionDoNotSendInstruments != false) {
            output.WriteRawTag(120);
            output.WriteBool(SubscriptionDoNotSendInstruments);
          }
          if (SubscriptionDoNotSendSnapshots != false) {
            output.WriteRawTag(128, 1);
            output.WriteBool(SubscriptionDoNotSendSnapshots);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasSymbol) {
            output.WriteRawTag(10);
            output.WriteString(Symbol);
          }
          if (HasMarketId) {
            output.WriteRawTag(16);
            output.WriteSInt64(MarketId);
          }
          if (HasExchange) {
            output.WriteRawTag(26);
            output.WriteString(Exchange);
          }
          if (HasChannelId) {
            output.WriteRawTag(32);
            output.WriteSInt32(ChannelId);
          }
          subscriptionType_.WriteTo(ref output, _repeated_subscriptionType_codec);
          if (SnapshotIntervalSeconds != 0) {
            output.WriteRawTag(88);
            output.WriteSInt32(SnapshotIntervalSeconds);
          }
          instrumentType_.WriteTo(ref output, _repeated_instrumentType_codec);
          bulkSubscriptionFilter_.WriteTo(ref output, _repeated_bulkSubscriptionFilter_codec);
          spreadTypeFilter_.WriteTo(ref output, _repeated_spreadTypeFilter_codec);
          if (SubscriptionDoNotSendInstruments != false) {
            output.WriteRawTag(120);
            output.WriteBool(SubscriptionDoNotSendInstruments);
          }
          if (SubscriptionDoNotSendSnapshots != false) {
            output.WriteRawTag(128, 1);
            output.WriteBool(SubscriptionDoNotSendSnapshots);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasSymbol) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
          }
          if (HasMarketId) {
            size += 1 + pb::CodedOutputStream.ComputeSInt64Size(MarketId);
          }
          if (HasExchange) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchange);
          }
          if (HasChannelId) {
            size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ChannelId);
          }
          size += subscriptionType_.CalculateSize(_repeated_subscriptionType_codec);
          if (SnapshotIntervalSeconds != 0) {
            size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SnapshotIntervalSeconds);
          }
          size += instrumentType_.CalculateSize(_repeated_instrumentType_codec);
          size += bulkSubscriptionFilter_.CalculateSize(_repeated_bulkSubscriptionFilter_codec);
          size += spreadTypeFilter_.CalculateSize(_repeated_spreadTypeFilter_codec);
          if (SubscriptionDoNotSendInstruments != false) {
            size += 1 + 1;
          }
          if (SubscriptionDoNotSendSnapshots != false) {
            size += 2 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          subscriptionType_.Add(other.subscriptionType_);
          if (other.SnapshotIntervalSeconds != 0) {
            SnapshotIntervalSeconds = other.SnapshotIntervalSeconds;
          }
          instrumentType_.Add(other.instrumentType_);
          bulkSubscriptionFilter_.Add(other.bulkSubscriptionFilter_);
          spreadTypeFilter_.Add(other.spreadTypeFilter_);
          if (other.SubscriptionDoNotSendInstruments != false) {
            SubscriptionDoNotSendInstruments = other.SubscriptionDoNotSendInstruments;
          }
          if (other.SubscriptionDoNotSendSnapshots != false) {
            SubscriptionDoNotSendSnapshots = other.SubscriptionDoNotSendSnapshots;
          }
          switch (other.DataCase) {
            case DataOneofCase.Symbol:
              Symbol = other.Symbol;
              break;
            case DataOneofCase.MarketId:
              MarketId = other.MarketId;
              break;
            case DataOneofCase.Exchange:
              Exchange = other.Exchange;
              break;
            case DataOneofCase.ChannelId:
              ChannelId = other.ChannelId;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Symbol = input.ReadString();
                break;
              }
              case 16: {
                MarketId = input.ReadSInt64();
                break;
              }
              case 26: {
                Exchange = input.ReadString();
                break;
              }
              case 32: {
                ChannelId = input.ReadSInt32();
                break;
              }
              case 82:
              case 80: {
                subscriptionType_.AddEntriesFrom(input, _repeated_subscriptionType_codec);
                break;
              }
              case 88: {
                SnapshotIntervalSeconds = input.ReadSInt32();
                break;
              }
              case 98:
              case 96: {
                instrumentType_.AddEntriesFrom(input, _repeated_instrumentType_codec);
                break;
              }
              case 106: {
                bulkSubscriptionFilter_.AddEntriesFrom(input, _repeated_bulkSubscriptionFilter_codec);
                break;
              }
              case 114: {
                spreadTypeFilter_.AddEntriesFrom(input, _repeated_spreadTypeFilter_codec);
                break;
              }
              case 120: {
                SubscriptionDoNotSendInstruments = input.ReadBool();
                break;
              }
              case 128: {
                SubscriptionDoNotSendSnapshots = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Symbol = input.ReadString();
                break;
              }
              case 16: {
                MarketId = input.ReadSInt64();
                break;
              }
              case 26: {
                Exchange = input.ReadString();
                break;
              }
              case 32: {
                ChannelId = input.ReadSInt32();
                break;
              }
              case 82:
              case 80: {
                subscriptionType_.AddEntriesFrom(ref input, _repeated_subscriptionType_codec);
                break;
              }
              case 88: {
                SnapshotIntervalSeconds = input.ReadSInt32();
                break;
              }
              case 98:
              case 96: {
                instrumentType_.AddEntriesFrom(ref input, _repeated_instrumentType_codec);
                break;
              }
              case 106: {
                bulkSubscriptionFilter_.AddEntriesFrom(ref input, _repeated_bulkSubscriptionFilter_codec);
                break;
              }
              case 114: {
                spreadTypeFilter_.AddEntriesFrom(ref input, _repeated_spreadTypeFilter_codec);
                break;
              }
              case 120: {
                SubscriptionDoNotSendInstruments = input.ReadBool();
                break;
              }
              case 128: {
                SubscriptionDoNotSendSnapshots = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SubscriptionResponse : pb::IMessage<SubscriptionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubscriptionResponse> _parser = new pb::MessageParser<SubscriptionResponse>(() => new SubscriptionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubscriptionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Openfeed.OpenfeedApiReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscriptionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscriptionResponse(SubscriptionResponse other) : this() {
      correlationId_ = other.correlationId_;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      symbol_ = other.symbol_;
      marketId_ = other.marketId_;
      exchange_ = other.exchange_;
      channelId_ = other.channelId_;
      numberOfDefinitions_ = other.numberOfDefinitions_;
      subscriptionType_ = other.subscriptionType_;
      unsubscribe_ = other.unsubscribe_;
      snapshotIntervalSeconds_ = other.snapshotIntervalSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscriptionResponse Clone() {
      return new SubscriptionResponse(this);
    }

    /// <summary>Field number for the "correlationId" field.</summary>
    public const int CorrelationIdFieldNumber = 1;
    private long correlationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CorrelationId {
      get { return correlationId_; }
      set {
        correlationId_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Org.Openfeed.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 3;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "marketId" field.</summary>
    public const int MarketIdFieldNumber = 4;
    private long marketId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MarketId {
      get { return marketId_; }
      set {
        marketId_ = value;
      }
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 5;
    private string exchange_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Exchange {
      get { return exchange_; }
      set {
        exchange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channelId" field.</summary>
    public const int ChannelIdFieldNumber = 6;
    private int channelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "numberOfDefinitions" field.</summary>
    public const int NumberOfDefinitionsFieldNumber = 7;
    private int numberOfDefinitions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumberOfDefinitions {
      get { return numberOfDefinitions_; }
      set {
        numberOfDefinitions_ = value;
      }
    }

    /// <summary>Field number for the "subscriptionType" field.</summary>
    public const int SubscriptionTypeFieldNumber = 8;
    private global::Org.Openfeed.SubscriptionType subscriptionType_ = global::Org.Openfeed.SubscriptionType.All;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.SubscriptionType SubscriptionType {
      get { return subscriptionType_; }
      set {
        subscriptionType_ = value;
      }
    }

    /// <summary>Field number for the "unsubscribe" field.</summary>
    public const int UnsubscribeFieldNumber = 9;
    private bool unsubscribe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Unsubscribe {
      get { return unsubscribe_; }
      set {
        unsubscribe_ = value;
      }
    }

    /// <summary>Field number for the "snapshotIntervalSeconds" field.</summary>
    public const int SnapshotIntervalSecondsFieldNumber = 10;
    private int snapshotIntervalSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SnapshotIntervalSeconds {
      get { return snapshotIntervalSeconds_; }
      set {
        snapshotIntervalSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubscriptionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubscriptionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CorrelationId != other.CorrelationId) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if (Symbol != other.Symbol) return false;
      if (MarketId != other.MarketId) return false;
      if (Exchange != other.Exchange) return false;
      if (ChannelId != other.ChannelId) return false;
      if (NumberOfDefinitions != other.NumberOfDefinitions) return false;
      if (SubscriptionType != other.SubscriptionType) return false;
      if (Unsubscribe != other.Unsubscribe) return false;
      if (SnapshotIntervalSeconds != other.SnapshotIntervalSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CorrelationId != 0L) hash ^= CorrelationId.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (MarketId != 0L) hash ^= MarketId.GetHashCode();
      if (Exchange.Length != 0) hash ^= Exchange.GetHashCode();
      if (ChannelId != 0) hash ^= ChannelId.GetHashCode();
      if (NumberOfDefinitions != 0) hash ^= NumberOfDefinitions.GetHashCode();
      if (SubscriptionType != global::Org.Openfeed.SubscriptionType.All) hash ^= SubscriptionType.GetHashCode();
      if (Unsubscribe != false) hash ^= Unsubscribe.GetHashCode();
      if (SnapshotIntervalSeconds != 0) hash ^= SnapshotIntervalSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Symbol);
      }
      if (MarketId != 0L) {
        output.WriteRawTag(32);
        output.WriteSInt64(MarketId);
      }
      if (Exchange.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Exchange);
      }
      if (ChannelId != 0) {
        output.WriteRawTag(48);
        output.WriteSInt32(ChannelId);
      }
      if (NumberOfDefinitions != 0) {
        output.WriteRawTag(56);
        output.WriteSInt32(NumberOfDefinitions);
      }
      if (SubscriptionType != global::Org.Openfeed.SubscriptionType.All) {
        output.WriteRawTag(64);
        output.WriteEnum((int) SubscriptionType);
      }
      if (Unsubscribe != false) {
        output.WriteRawTag(72);
        output.WriteBool(Unsubscribe);
      }
      if (SnapshotIntervalSeconds != 0) {
        output.WriteRawTag(80);
        output.WriteSInt32(SnapshotIntervalSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Symbol);
      }
      if (MarketId != 0L) {
        output.WriteRawTag(32);
        output.WriteSInt64(MarketId);
      }
      if (Exchange.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Exchange);
      }
      if (ChannelId != 0) {
        output.WriteRawTag(48);
        output.WriteSInt32(ChannelId);
      }
      if (NumberOfDefinitions != 0) {
        output.WriteRawTag(56);
        output.WriteSInt32(NumberOfDefinitions);
      }
      if (SubscriptionType != global::Org.Openfeed.SubscriptionType.All) {
        output.WriteRawTag(64);
        output.WriteEnum((int) SubscriptionType);
      }
      if (Unsubscribe != false) {
        output.WriteRawTag(72);
        output.WriteBool(Unsubscribe);
      }
      if (SnapshotIntervalSeconds != 0) {
        output.WriteRawTag(80);
        output.WriteSInt32(SnapshotIntervalSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CorrelationId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(CorrelationId);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (MarketId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(MarketId);
      }
      if (Exchange.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchange);
      }
      if (ChannelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ChannelId);
      }
      if (NumberOfDefinitions != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(NumberOfDefinitions);
      }
      if (SubscriptionType != global::Org.Openfeed.SubscriptionType.All) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubscriptionType);
      }
      if (Unsubscribe != false) {
        size += 1 + 1;
      }
      if (SnapshotIntervalSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SnapshotIntervalSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubscriptionResponse other) {
      if (other == null) {
        return;
      }
      if (other.CorrelationId != 0L) {
        CorrelationId = other.CorrelationId;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Org.Openfeed.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.MarketId != 0L) {
        MarketId = other.MarketId;
      }
      if (other.Exchange.Length != 0) {
        Exchange = other.Exchange;
      }
      if (other.ChannelId != 0) {
        ChannelId = other.ChannelId;
      }
      if (other.NumberOfDefinitions != 0) {
        NumberOfDefinitions = other.NumberOfDefinitions;
      }
      if (other.SubscriptionType != global::Org.Openfeed.SubscriptionType.All) {
        SubscriptionType = other.SubscriptionType;
      }
      if (other.Unsubscribe != false) {
        Unsubscribe = other.Unsubscribe;
      }
      if (other.SnapshotIntervalSeconds != 0) {
        SnapshotIntervalSeconds = other.SnapshotIntervalSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            if (status_ == null) {
              Status = new global::Org.Openfeed.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 26: {
            Symbol = input.ReadString();
            break;
          }
          case 32: {
            MarketId = input.ReadSInt64();
            break;
          }
          case 42: {
            Exchange = input.ReadString();
            break;
          }
          case 48: {
            ChannelId = input.ReadSInt32();
            break;
          }
          case 56: {
            NumberOfDefinitions = input.ReadSInt32();
            break;
          }
          case 64: {
            SubscriptionType = (global::Org.Openfeed.SubscriptionType) input.ReadEnum();
            break;
          }
          case 72: {
            Unsubscribe = input.ReadBool();
            break;
          }
          case 80: {
            SnapshotIntervalSeconds = input.ReadSInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            if (status_ == null) {
              Status = new global::Org.Openfeed.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 26: {
            Symbol = input.ReadString();
            break;
          }
          case 32: {
            MarketId = input.ReadSInt64();
            break;
          }
          case 42: {
            Exchange = input.ReadString();
            break;
          }
          case 48: {
            ChannelId = input.ReadSInt32();
            break;
          }
          case 56: {
            NumberOfDefinitions = input.ReadSInt32();
            break;
          }
          case 64: {
            SubscriptionType = (global::Org.Openfeed.SubscriptionType) input.ReadEnum();
            break;
          }
          case 72: {
            Unsubscribe = input.ReadBool();
            break;
          }
          case 80: {
            SnapshotIntervalSeconds = input.ReadSInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///&#x2F; List Subscriptions for a user
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ListSubscriptionsRequest : pb::IMessage<ListSubscriptionsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListSubscriptionsRequest> _parser = new pb::MessageParser<ListSubscriptionsRequest>(() => new ListSubscriptionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListSubscriptionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Openfeed.OpenfeedApiReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListSubscriptionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListSubscriptionsRequest(ListSubscriptionsRequest other) : this() {
      correlationId_ = other.correlationId_;
      token_ = other.token_;
      username_ = other.username_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListSubscriptionsRequest Clone() {
      return new ListSubscriptionsRequest(this);
    }

    /// <summary>Field number for the "correlationId" field.</summary>
    public const int CorrelationIdFieldNumber = 1;
    private long correlationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CorrelationId {
      get { return correlationId_; }
      set {
        correlationId_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 3;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListSubscriptionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListSubscriptionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CorrelationId != other.CorrelationId) return false;
      if (Token != other.Token) return false;
      if (Username != other.Username) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CorrelationId != 0L) hash ^= CorrelationId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CorrelationId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(CorrelationId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListSubscriptionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.CorrelationId != 0L) {
        CorrelationId = other.CorrelationId;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26: {
            Username = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26: {
            Username = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ListSubscriptionsResponse : pb::IMessage<ListSubscriptionsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListSubscriptionsResponse> _parser = new pb::MessageParser<ListSubscriptionsResponse>(() => new ListSubscriptionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListSubscriptionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Openfeed.OpenfeedApiReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListSubscriptionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListSubscriptionsResponse(ListSubscriptionsResponse other) : this() {
      correlationId_ = other.correlationId_;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      username_ = other.username_;
      sessions_ = other.sessions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListSubscriptionsResponse Clone() {
      return new ListSubscriptionsResponse(this);
    }

    /// <summary>Field number for the "correlationId" field.</summary>
    public const int CorrelationIdFieldNumber = 1;
    private long correlationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CorrelationId {
      get { return correlationId_; }
      set {
        correlationId_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Org.Openfeed.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Org.Openfeed.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 3;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sessions" field.</summary>
    public const int SessionsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Org.Openfeed.ListSubscriptionsResponse.Types.Session> _repeated_sessions_codec
        = pb::FieldCodec.ForMessage(82, global::Org.Openfeed.ListSubscriptionsResponse.Types.Session.Parser);
    private readonly pbc::RepeatedField<global::Org.Openfeed.ListSubscriptionsResponse.Types.Session> sessions_ = new pbc::RepeatedField<global::Org.Openfeed.ListSubscriptionsResponse.Types.Session>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Org.Openfeed.ListSubscriptionsResponse.Types.Session> Sessions {
      get { return sessions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListSubscriptionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListSubscriptionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CorrelationId != other.CorrelationId) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if (Username != other.Username) return false;
      if(!sessions_.Equals(other.sessions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CorrelationId != 0L) hash ^= CorrelationId.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      hash ^= sessions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Username);
      }
      sessions_.WriteTo(output, _repeated_sessions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CorrelationId != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CorrelationId);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Username);
      }
      sessions_.WriteTo(ref output, _repeated_sessions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CorrelationId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(CorrelationId);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      size += sessions_.CalculateSize(_repeated_sessions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListSubscriptionsResponse other) {
      if (other == null) {
        return;
      }
      if (other.CorrelationId != 0L) {
        CorrelationId = other.CorrelationId;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Org.Openfeed.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      sessions_.Add(other.sessions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            if (status_ == null) {
              Status = new global::Org.Openfeed.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 26: {
            Username = input.ReadString();
            break;
          }
          case 82: {
            sessions_.AddEntriesFrom(input, _repeated_sessions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CorrelationId = input.ReadSInt64();
            break;
          }
          case 18: {
            if (status_ == null) {
              Status = new global::Org.Openfeed.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 26: {
            Username = input.ReadString();
            break;
          }
          case 82: {
            sessions_.AddEntriesFrom(ref input, _repeated_sessions_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ListSubscriptionsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Session : pb::IMessage<Session>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Session> _parser = new pb::MessageParser<Session>(() => new Session());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Session> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Org.Openfeed.ListSubscriptionsResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Session() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Session(Session other) : this() {
          loginTime_ = other.loginTime_;
          token_ = other.token_;
          clientVersion_ = other.clientVersion_;
          marketSubscriptions_ = other.marketSubscriptions_.Clone();
          exchangeSubscriptions_ = other.exchangeSubscriptions_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Session Clone() {
          return new Session(this);
        }

        /// <summary>Field number for the "loginTime" field.</summary>
        public const int LoginTimeFieldNumber = 1;
        private long loginTime_;
        /// <summary>
        ///&#x2F; Nano second unix epoch
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long LoginTime {
          get { return loginTime_; }
          set {
            loginTime_ = value;
          }
        }

        /// <summary>Field number for the "token" field.</summary>
        public const int TokenFieldNumber = 2;
        private string token_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Token {
          get { return token_; }
          set {
            token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "clientVersion" field.</summary>
        public const int ClientVersionFieldNumber = 3;
        private string clientVersion_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClientVersion {
          get { return clientVersion_; }
          set {
            clientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "marketSubscriptions" field.</summary>
        public const int MarketSubscriptionsFieldNumber = 10;
        private static readonly pb::FieldCodec<global::Org.Openfeed.ListSubscriptionsResponse.Types.Subscription> _repeated_marketSubscriptions_codec
            = pb::FieldCodec.ForMessage(82, global::Org.Openfeed.ListSubscriptionsResponse.Types.Subscription.Parser);
        private readonly pbc::RepeatedField<global::Org.Openfeed.ListSubscriptionsResponse.Types.Subscription> marketSubscriptions_ = new pbc::RepeatedField<global::Org.Openfeed.ListSubscriptionsResponse.Types.Subscription>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Org.Openfeed.ListSubscriptionsResponse.Types.Subscription> MarketSubscriptions {
          get { return marketSubscriptions_; }
        }

        /// <summary>Field number for the "exchangeSubscriptions" field.</summary>
        public const int ExchangeSubscriptionsFieldNumber = 11;
        private static readonly pb::FieldCodec<global::Org.Openfeed.ListSubscriptionsResponse.Types.Subscription> _repeated_exchangeSubscriptions_codec
            = pb::FieldCodec.ForMessage(90, global::Org.Openfeed.ListSubscriptionsResponse.Types.Subscription.Parser);
        private readonly pbc::RepeatedField<global::Org.Openfeed.ListSubscriptionsResponse.Types.Subscription> exchangeSubscriptions_ = new pbc::RepeatedField<global::Org.Openfeed.ListSubscriptionsResponse.Types.Subscription>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Org.Openfeed.ListSubscriptionsResponse.Types.Subscription> ExchangeSubscriptions {
          get { return exchangeSubscriptions_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Session);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Session other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (LoginTime != other.LoginTime) return false;
          if (Token != other.Token) return false;
          if (ClientVersion != other.ClientVersion) return false;
          if(!marketSubscriptions_.Equals(other.marketSubscriptions_)) return false;
          if(!exchangeSubscriptions_.Equals(other.exchangeSubscriptions_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (LoginTime != 0L) hash ^= LoginTime.GetHashCode();
          if (Token.Length != 0) hash ^= Token.GetHashCode();
          if (ClientVersion.Length != 0) hash ^= ClientVersion.GetHashCode();
          hash ^= marketSubscriptions_.GetHashCode();
          hash ^= exchangeSubscriptions_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (LoginTime != 0L) {
            output.WriteRawTag(8);
            output.WriteSInt64(LoginTime);
          }
          if (Token.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Token);
          }
          if (ClientVersion.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ClientVersion);
          }
          marketSubscriptions_.WriteTo(output, _repeated_marketSubscriptions_codec);
          exchangeSubscriptions_.WriteTo(output, _repeated_exchangeSubscriptions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (LoginTime != 0L) {
            output.WriteRawTag(8);
            output.WriteSInt64(LoginTime);
          }
          if (Token.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Token);
          }
          if (ClientVersion.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ClientVersion);
          }
          marketSubscriptions_.WriteTo(ref output, _repeated_marketSubscriptions_codec);
          exchangeSubscriptions_.WriteTo(ref output, _repeated_exchangeSubscriptions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (LoginTime != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeSInt64Size(LoginTime);
          }
          if (Token.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
          }
          if (ClientVersion.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientVersion);
          }
          size += marketSubscriptions_.CalculateSize(_repeated_marketSubscriptions_codec);
          size += exchangeSubscriptions_.CalculateSize(_repeated_exchangeSubscriptions_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Session other) {
          if (other == null) {
            return;
          }
          if (other.LoginTime != 0L) {
            LoginTime = other.LoginTime;
          }
          if (other.Token.Length != 0) {
            Token = other.Token;
          }
          if (other.ClientVersion.Length != 0) {
            ClientVersion = other.ClientVersion;
          }
          marketSubscriptions_.Add(other.marketSubscriptions_);
          exchangeSubscriptions_.Add(other.exchangeSubscriptions_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                LoginTime = input.ReadSInt64();
                break;
              }
              case 18: {
                Token = input.ReadString();
                break;
              }
              case 26: {
                ClientVersion = input.ReadString();
                break;
              }
              case 82: {
                marketSubscriptions_.AddEntriesFrom(input, _repeated_marketSubscriptions_codec);
                break;
              }
              case 90: {
                exchangeSubscriptions_.AddEntriesFrom(input, _repeated_exchangeSubscriptions_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                LoginTime = input.ReadSInt64();
                break;
              }
              case 18: {
                Token = input.ReadString();
                break;
              }
              case 26: {
                ClientVersion = input.ReadString();
                break;
              }
              case 82: {
                marketSubscriptions_.AddEntriesFrom(ref input, _repeated_marketSubscriptions_codec);
                break;
              }
              case 90: {
                exchangeSubscriptions_.AddEntriesFrom(ref input, _repeated_exchangeSubscriptions_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Subscription : pb::IMessage<Subscription>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Subscription> _parser = new pb::MessageParser<Subscription>(() => new Subscription());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Subscription> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Org.Openfeed.ListSubscriptionsResponse.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Subscription() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Subscription(Subscription other) : this() {
          subscriptionId_ = other.subscriptionId_;
          symbolId_ = other.symbolId_;
          marketId_ = other.marketId_;
          symbolCounts_ = other.symbolCounts_.Clone();
          exchange_ = other.exchange_;
          root_ = other.root_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Subscription Clone() {
          return new Subscription(this);
        }

        /// <summary>Field number for the "subscriptionId" field.</summary>
        public const int SubscriptionIdFieldNumber = 1;
        private string subscriptionId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string SubscriptionId {
          get { return subscriptionId_; }
          set {
            subscriptionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "symbolId" field.</summary>
        public const int SymbolIdFieldNumber = 2;
        private string symbolId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string SymbolId {
          get { return symbolId_; }
          set {
            symbolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "marketId" field.</summary>
        public const int MarketIdFieldNumber = 3;
        private long marketId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long MarketId {
          get { return marketId_; }
          set {
            marketId_ = value;
          }
        }

        /// <summary>Field number for the "symbolCounts" field.</summary>
        public const int SymbolCountsFieldNumber = 4;
        private static readonly pb::FieldCodec<global::Org.Openfeed.ListSubscriptionsResponse.Types.SymbolCount> _repeated_symbolCounts_codec
            = pb::FieldCodec.ForMessage(34, global::Org.Openfeed.ListSubscriptionsResponse.Types.SymbolCount.Parser);
        private readonly pbc::RepeatedField<global::Org.Openfeed.ListSubscriptionsResponse.Types.SymbolCount> symbolCounts_ = new pbc::RepeatedField<global::Org.Openfeed.ListSubscriptionsResponse.Types.SymbolCount>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Org.Openfeed.ListSubscriptionsResponse.Types.SymbolCount> SymbolCounts {
          get { return symbolCounts_; }
        }

        /// <summary>Field number for the "exchange" field.</summary>
        public const int ExchangeFieldNumber = 10;
        private string exchange_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Exchange {
          get { return exchange_; }
          set {
            exchange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "root" field.</summary>
        public const int RootFieldNumber = 11;
        private string root_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Root {
          get { return root_; }
          set {
            root_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Subscription);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Subscription other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SubscriptionId != other.SubscriptionId) return false;
          if (SymbolId != other.SymbolId) return false;
          if (MarketId != other.MarketId) return false;
          if(!symbolCounts_.Equals(other.symbolCounts_)) return false;
          if (Exchange != other.Exchange) return false;
          if (Root != other.Root) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (SubscriptionId.Length != 0) hash ^= SubscriptionId.GetHashCode();
          if (SymbolId.Length != 0) hash ^= SymbolId.GetHashCode();
          if (MarketId != 0L) hash ^= MarketId.GetHashCode();
          hash ^= symbolCounts_.GetHashCode();
          if (Exchange.Length != 0) hash ^= Exchange.GetHashCode();
          if (Root.Length != 0) hash ^= Root.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (SubscriptionId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SubscriptionId);
          }
          if (SymbolId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(SymbolId);
          }
          if (MarketId != 0L) {
            output.WriteRawTag(24);
            output.WriteSInt64(MarketId);
          }
          symbolCounts_.WriteTo(output, _repeated_symbolCounts_codec);
          if (Exchange.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(Exchange);
          }
          if (Root.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(Root);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (SubscriptionId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SubscriptionId);
          }
          if (SymbolId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(SymbolId);
          }
          if (MarketId != 0L) {
            output.WriteRawTag(24);
            output.WriteSInt64(MarketId);
          }
          symbolCounts_.WriteTo(ref output, _repeated_symbolCounts_codec);
          if (Exchange.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(Exchange);
          }
          if (Root.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(Root);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (SubscriptionId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SubscriptionId);
          }
          if (SymbolId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SymbolId);
          }
          if (MarketId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeSInt64Size(MarketId);
          }
          size += symbolCounts_.CalculateSize(_repeated_symbolCounts_codec);
          if (Exchange.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchange);
          }
          if (Root.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Root);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Subscription other) {
          if (other == null) {
            return;
          }
          if (other.SubscriptionId.Length != 0) {
            SubscriptionId = other.SubscriptionId;
          }
          if (other.SymbolId.Length != 0) {
            SymbolId = other.SymbolId;
          }
          if (other.MarketId != 0L) {
            MarketId = other.MarketId;
          }
          symbolCounts_.Add(other.symbolCounts_);
          if (other.Exchange.Length != 0) {
            Exchange = other.Exchange;
          }
          if (other.Root.Length != 0) {
            Root = other.Root;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                SubscriptionId = input.ReadString();
                break;
              }
              case 18: {
                SymbolId = input.ReadString();
                break;
              }
              case 24: {
                MarketId = input.ReadSInt64();
                break;
              }
              case 34: {
                symbolCounts_.AddEntriesFrom(input, _repeated_symbolCounts_codec);
                break;
              }
              case 82: {
                Exchange = input.ReadString();
                break;
              }
              case 90: {
                Root = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                SubscriptionId = input.ReadString();
                break;
              }
              case 18: {
                SymbolId = input.ReadString();
                break;
              }
              case 24: {
                MarketId = input.ReadSInt64();
                break;
              }
              case 34: {
                symbolCounts_.AddEntriesFrom(ref input, _repeated_symbolCounts_codec);
                break;
              }
              case 82: {
                Exchange = input.ReadString();
                break;
              }
              case 90: {
                Root = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class SymbolCount : pb::IMessage<SymbolCount>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SymbolCount> _parser = new pb::MessageParser<SymbolCount>(() => new SymbolCount());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<SymbolCount> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Org.Openfeed.ListSubscriptionsResponse.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SymbolCount() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SymbolCount(SymbolCount other) : this() {
          symbol_ = other.symbol_;
          count_ = other.count_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SymbolCount Clone() {
          return new SymbolCount(this);
        }

        /// <summary>Field number for the "symbol" field.</summary>
        public const int SymbolFieldNumber = 1;
        private string symbol_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Symbol {
          get { return symbol_; }
          set {
            symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "count" field.</summary>
        public const int CountFieldNumber = 2;
        private int count_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Count {
          get { return count_; }
          set {
            count_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as SymbolCount);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(SymbolCount other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Symbol != other.Symbol) return false;
          if (Count != other.Count) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
          if (Count != 0) hash ^= Count.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Symbol.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Symbol);
          }
          if (Count != 0) {
            output.WriteRawTag(16);
            output.WriteSInt32(Count);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Symbol.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Symbol);
          }
          if (Count != 0) {
            output.WriteRawTag(16);
            output.WriteSInt32(Count);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Symbol.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
          }
          if (Count != 0) {
            size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Count);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(SymbolCount other) {
          if (other == null) {
            return;
          }
          if (other.Symbol.Length != 0) {
            Symbol = other.Symbol;
          }
          if (other.Count != 0) {
            Count = other.Count;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Symbol = input.ReadString();
                break;
              }
              case 16: {
                Count = input.ReadSInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Symbol = input.ReadString();
                break;
              }
              case 16: {
                Count = input.ReadSInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
